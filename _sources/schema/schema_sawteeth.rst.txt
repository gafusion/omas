
sawteeth
^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Description of sawtooth events. This IDS must be used in homogeneous_time = 1 mode</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of external libraries used by the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.library[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.crash_trigger</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Flag indicating whether a crash condition has been satisfied : 0 = no crash. N(>0) = crash triggered due to condition N as follows. 1: crash triggered by the ideal kink criterion; 2: crash triggered by the ideal kink criterion including kinetic effects from fast particles; 31: crash triggered by the resistive kink criterion (meeting necessary conditions for reconnection); 32: crash triggered by the resistive kink criterion (resistive kink mode is unstable). The distinction between 31 and 32 only indicates whether (31) or (32) was the last criterion to be satisfied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Detailed information about the sawtooth characteristics</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.magnetic_shear_q1</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Magnetic shear at surface q = 1, defined as rho_tor/q . dq/drho_tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.previous_crash_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Time at which the previous sawtooth crash occured</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.previous_crash_trigger</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Previous crash trigger. Flag indicating whether a crash condition has been satisfied : 0 = no crash. N(>0) = crash triggered due to condition N</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.previous_period</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Previous sawtooth period</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.rho_tor_norm_inversion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate at inversion radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.rho_tor_norm_mixing</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate at mixing radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.diagnostics.rho_tor_norm_q1</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate at surface q = 1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>User-defined name for this IDS occurrence</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.occurrence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p></p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.occurrence_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of data contained in this occurrence<br>1) reconstruction : Equilibrium reconstruction<br>2) prediction_fixed : Equilibrium prediction, fixed boundary<br>3) prediction_free : Equilibrium prediction, free boundary<br>4) mapping : Used for mapping equilibrium results from one grid type / resolution to another, or for including variables not present in the first set such as the calculation of magnetic field of other derived parameters</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.occurrence_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.occurrence_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.occurrence_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Information about the plugins used to write/read this IDS. This structure is filled automatically by the Access Layer at GET/PUT time, no need to fill it via a user program.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_get</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to GET the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_get.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_get.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_get.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_get.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_get.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to PUT the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_put.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_put.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_put.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_put.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.infrastructure_put.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which a plugin has been applied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins actually used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application). This information is filled by the plugin infrastructure during the GET operation.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].get_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the plugin applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins used to PUT a node (potentially, multiple plugins can be applied, if so they are listed by order of application)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].put_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins to be used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.plugins.node[:].readback[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.provenance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Provenance information about this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.provenance.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which the provenance is given. The provenance information applies to the whole structure below the IDS node. For documenting provenance information for the whole IDS, set the size of this array of structure to 1 and leave the child "path" node empty</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.provenance.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the provenance information applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.provenance.node[:].sources</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>List of sources used to import or calculate this node, identified as explained below. In case the node is the result of of a calculation / data processing, the source is an input to the process described in the "code" structure at the root of the IDS. The source can be an IDS (identified by a URI or a persitent identifier, see syntax in the link below) or non-IDS data imported directly from an non-IMAS database (identified by the command used to import the source, or the persistent identifier of the data source). Often data are obtained by a chain of processes, however only the last process input are recorded here. The full chain of provenance has then to be reconstructed recursively from the provenance information contained in the data sources.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.source</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...). Superseeded by the new provenance structure.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Core profiles after sawtooth crash for various time slices</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].conductivity_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>ohm^-1.m^-1</p></td><td><p>Parallel conductivity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].e_field_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Parallel electric field = average(E.B) / B0, where Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.area</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Cross-sectional area of the flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.psi_boundary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal magnetic flux at the plasma boundary (useful to normalize the psi array values when the radial grid doesn't go from the magnetic axis to the plasma boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.psi_magnetic_axis</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal magnetic flux at the magnetic axis (useful to normalize the psi array values when the radial grid doesn't go from the magnetic axis to the plasma boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.rho_pol_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised poloidal flux coordinate = sqrt((psi(rho)-psi(magnetic_axis)) / (psi(LCFS)-psi(magnetic_axis)))</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.rho_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>sawteeth.profiles_1d[:].grid.rho_tor_norm</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface area of the toroidal flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].grid.volume</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^3</p></td><td><p>Volume enclosed inside the magnetic surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].j_bootstrap</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Bootstrap current density = average(J_Bootstrap.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].j_non_inductive</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Non-inductive (includes bootstrap) parallel current density = average(jni.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].j_ohmic</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Ohmic parallel current density = average(J_Ohmic.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].j_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Total toroidal current density = average(J_Tor/R) / average(1/R)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].j_total</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Total parallel current density = average(jtot.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].magnetic_shear</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].momentum_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>kg.m/s</p></td><td><p>Total plasma toroidal momentum, summed over ion species and electrons </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].n_e</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Electron density (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].n_e_fast</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of fast (non-thermal) electrons</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].n_i_total_over_n_e</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].p_e</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Electron pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].p_e_fast_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) electron parallel pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].p_e_fast_perpendicular</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) electron perpendicular pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].p_i_total</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Total ion pressure (sum over the ion species)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].p_i_total_fast_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) total ion (sum over the ion species) parallel pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].p_i_total_fast_perpendicular</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) total ion (sum over the ion species) perpendicular pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Toroidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].pressure_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Total parallel pressure (electrons+ions, thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].pressure_perpendicular</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Total perpendicular pressure (electrons+ions, thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].pressure_thermal</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Thermal pressure (electrons+ions)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].psi_star_post_crash</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Psi* = psi - phi, after the sawtooth crash</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].psi_star_pre_crash</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Psi* = psi - phi, just before the sawtooth crash</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].q</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Safety factor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].t_e</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Electron temperature</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].t_i_average</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Ion temperature (averaged on charge states and ion species)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>sawteeth.profiles_1d[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.profiles_1d[:].zeff</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Effective charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>sawteeth.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.vacuum_toroidal_field</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.vacuum_toroidal_field.b0</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[sawteeth.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewing from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>sawteeth.vacuum_toroidal_field.r0</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane)</p></td></tr>
   </table>
   </table><p></p>
