
core instant changes
^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Instant changes of the radial core plasma profiles due to pellet, MHD, ... </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of instant change terms (each being due to a different phenomenon)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].identifier</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Instant change term identifier<br>0) unspecified : Unspecified instant changes<br>1) total : Total instant changes; combines all types of events<br>2) pellet : Instant changes from a pellet<br>3) sawtooth : Instant changes from a sawtooth<br>4) elm : Instant changes from an edge localised mode</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].identifier.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].identifier.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].identifier.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Changes in 1D core profiles for various time slices. This structure mirrors core_profiles/profiles_1d and describes instant changes to each of these physical quantities (i.e. a signed difference quantity after change - quantity before change)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].conductivity_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>ohm^-1.m^-1</p></td><td><p>Parallel conductivity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].current_parallel_inside</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A</p></td><td><p>Parallel current driven inside the flux surface. Cumulative surface integral of j_total</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>V.m^-1</p></td><td><p>Electric field, averaged on the magnetic surface. E.g for the parallel component, average(E.B) / B0, using core_profiles/vacuum_toroidal_field/b0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field.diamagnetic</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Diamagnetic component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field.parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Parallel component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field.poloidal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Poloidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field.radial</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Radial component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field.toroidal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Toroidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].e_field_parallel</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Parallel electric field = average(E.B) / B0, where Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.collisionality_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Collisionality normalised to the bounce frequency</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fast</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of fast (non-thermal) particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m^-3</p></td><td><p>Information on the fit used to obtain the density profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of thermal particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_validity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the density profile. 0: valid from automated processing, 1: valid and certified by the RO; - 1 means problem identified in the data processing (request verification by the RO), -2: invalid data, should not be used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure_fast_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) parallel pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure_fast_perpendicular</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) perpendicular pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal) associated with random motion ~average((v-average(v))^2) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Temperature</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>eV</p></td><td><p>Information on the fit used to obtain the temperature profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].electrons.temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature_validity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the temperature profile. 0: valid from automated processing, 1: valid and certified by the RO; - 1 means problem identified in the data processing (request verification by the RO), -2: invalid data, should not be used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m.s^-1</p></td><td><p>Velocity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.diamagnetic</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Diamagnetic component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.parallel</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Parallel component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.poloidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.radial</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Radial component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.toroidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity_pol</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal velocity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity_tor</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal velocity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.area</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Cross-sectional area of the flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.psi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.psi_boundary</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal magnetic flux at the plasma boundary (useful to normalize the psi array values when the radial grid doesn't go from the magnetic axis to the plasma boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.psi_magnetic_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal magnetic flux at the magnetic axis (useful to normalize the psi array values when the radial grid doesn't go from the magnetic axis to the plasma boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.rho_pol_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised poloidal flux coordinate = sqrt((psi(rho)-psi(magnetic_axis)) / (psi(LCFS)-psi(magnetic_axis)))</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.rho_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.surface</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface area of the toroidal flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].grid.volume</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^3</p></td><td><p>Volume enclosed inside the magnetic surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Quantities related to the different ion species, in the sense of isonuclear or isomolecular sequences. Ionisation states (or other types of states) must be differentiated at the state level below</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fast</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m^-3</p></td><td><p>Information on the fit used to obtain the density profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_validity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the density profile. 0: valid from automated processing, 1: valid and certified by the RO; - 1 means problem identified in the data processing (request verification by the RO), -2: invalid data, should not be used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].a</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].atoms_n</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].z_n</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].label</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying ion (e.g. H, D, T, He, C, D2, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].multiple_states_flag</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only the 'ion' level is considered and the 'state' array of structure is empty; 1-Ion states are considered and are described in the 'state' array of structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].neutral_index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding neutral species in the ../../neutral array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal+non-thermal) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure_fast_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) parallel pressure  (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure_fast_perpendicular</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) perpendicular pressure  (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal) associated with random motion ~average((v-average(v))^2) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].rotation_frequency_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad.s^-1</p></td><td><p>Toroidal rotation frequency  (i.e. toroidal velocity divided by the major radius at which the toroidal velocity is taken) (average over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fast</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of fast (non-thermal) particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m^-3</p></td><td><p>Information on the fit used to obtain the density profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of thermal particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].ionisation_potential</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>eV</p></td><td><p>Cumulative and average ionisation potential to reach a given bundle. Defined as sum (x_z* (sum of Epot from z'=0 to z-1)), where Epot is the ionisation potential of ion Xz’+, and x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].label</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure_fast_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) parallel pressure </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure_fast_perpendicular</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) perpendicular pressure  </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal) associated with random motion ~average((v-average(v))^2)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].rotation_frequency_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad.s^-1</p></td><td><p>Toroidal rotation frequency (i.e. toroidal velocity divided by the major radius at which the toroidal velocity is taken)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].temperature</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Temperature</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m.s^-1</p></td><td><p>Velocity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.diamagnetic</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Diamagnetic component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.parallel</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Parallel component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.poloidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.radial</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Radial component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.toroidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_average</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Average Z of the charge state bundle, volume averaged over the plasma radius (equal to z_min if no bundle), = sum (Z*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_average_1d</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Average charge profile of the charge state bundle (equal to z_min if no bundle), = sum (Z*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_average_square_1d</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Average square charge profile of the charge state bundle (equal to z_min squared if no bundle), = sum (Z^2*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_max</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_min</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Minimum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_square_average</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Average Z square of the charge state bundle, volume averaged over the plasma radius (equal to z_min squared if no bundle), = sum (Z^2*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Temperature (average over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>eV</p></td><td><p>Information on the fit used to obtain the temperature profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature_validity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the temperature profile. 0: valid from automated processing, 1: valid and certified by the RO; - 1 means problem identified in the data processing (request verification by the RO), -2: invalid data, should not be used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m.s^-1</p></td><td><p>Velocity (average over charge states when multiple charge states are considered) at the position of maximum major radius on every flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.diamagnetic</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Diamagnetic component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Parallel component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.poloidal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.radial</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Radial component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.toroidal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity_pol</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal velocity (average over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity_tor</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal velocity (average over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].z_ion</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed), volume averaged over plasma radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].z_ion_1d</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Average charge of the ion species (sum of states charge weighted by state density and divided by ion density)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].ion[:].z_ion_square_1d</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Average square charge of the ion species (sum of states square charge weighted by state density and divided by ion density)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].j_bootstrap</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Bootstrap current density = average(J_Bootstrap.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].j_non_inductive</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Non-inductive (includes bootstrap) parallel current density = average(jni.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].j_ohmic</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Ohmic parallel current density = average(J_Ohmic.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].j_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Total toroidal current density = average(J_Tor/R) / average(1/R)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].j_total</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A/m^2</p></td><td><p>Total parallel current density = average(jtot.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].magnetic_shear</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].momentum_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>kg.m^-1.s^-1</p></td><td><p>Total plasma toroidal momentum, summed over ion species and electrons weighted by their density and major radius, i.e. sum_over_species(n*R*m*Vphi)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].n_i_thermal_total</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Total ion thermal density (sum over species and charge states)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].n_i_total_over_n_e</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Quantities related to the different neutral species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].density</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].density_fast</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].density_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].a</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].atoms_n</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].z_n</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].ion_index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding ion species in the ../../ion array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].label</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying the species (e.g. H, D, T, He, C, D2, DT, CD4, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].multiple_states_flag</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal+non-thermal) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure_fast_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) parallel pressure  (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure_fast_perpendicular</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) perpendicular pressure  (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal) associated with random motion ~average((v-average(v))^2) (sum over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Quantities related to the different states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].density</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].density_fast</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of fast (non-thermal) particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].density_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Density of thermal particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].electron_configuration</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].label</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying state</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI<br>1) cold : Cold neutrals<br>2) thermal : Thermal neutrals<br>3) fast : Fast neutrals<br>4) nbi : NBI neutrals</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure_fast_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) parallel pressure </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure_fast_perpendicular</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Fast (non-thermal) perpendicular pressure  </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure (thermal) associated with random motion ~average((v-average(v))^2)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].temperature</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Temperature</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m.s^-1</p></td><td><p>Velocity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.diamagnetic</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Diamagnetic component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.parallel</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Parallel component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.poloidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.radial</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Radial component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.toroidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].vibrational_level</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].vibrational_mode</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].temperature</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Temperature (average over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>m.s^-1</p></td><td><p>Velocity (average over charge states when multiple charge states are considered)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.diamagnetic</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Diamagnetic component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.parallel</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Parallel component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.poloidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Poloidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.radial</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Radial component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.toroidal</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Toroidal component</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].phi_potential</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>Electrostatic potential, averaged on the magnetic flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].pressure_ion_total</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Total (sum over ion species) thermal ion pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].pressure_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Total parallel pressure (electrons+ions, thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].pressure_perpendicular</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Total perpendicular pressure (electrons+ions, thermal+non-thermal)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].pressure_thermal</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Thermal pressure (electrons+ions)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].q</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Safety factor (IMAS uses COCOS=11: only positive when toroidal current and magnetic field are in same direction)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].rotation_frequency_tor_sonic</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Derivative of the flux surface averaged electrostatic potential with respect to the poloidal flux, multiplied by -1. This quantity is the toroidal angular rotation frequency due to the ExB drift, introduced in formula (43) of Hinton and Wong, Physics of Fluids 3082 (1985), also referred to as sonic flow in regimes in which the toroidal velocity is dominant over the poloidal velocity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Ion temperature (averaged on charge states and ion species)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>eV</p></td><td><p>Information on the fit used to obtain the t_i_average profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].t_i_average_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].time</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Effective charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>-</p></td><td><p>Information on the fit used to obtain the zeff profile</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.chi_squared</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the weighted standard deviation considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.local</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer flag : 1 means local measurement, 0 means line-integrated measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Measured values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the fit specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.reconstructed</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Value reconstructed from the fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate of each measurement (local value for a local measurement, minimum value reached by the line of sight for a line measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.source</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Path to the source data for each measurement in the IMAS data dictionary, e.g. ece/channel(i)/t_e for the electron temperature on the i-th channel in the ECE IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.time_measurement</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slices used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.time_measurement_slice_method</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Method used to slice the data : index = 0 means using exact time slice of the measurement, 1 means linear interpolation, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.time_measurement_slice_method.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.time_measurement_slice_method.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.time_measurement_slice_method.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.time_measurement_width</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s</p></td><td><p>In case the measurements are averaged over a time interval, this node is the full width of this time interval (empty otherwise). In case the slicing/averaging method doesn't use a hard time interval cutoff, this width is the characteristic time span of the slicing/averaging method. By convention, the time interval starts at time_measurement-time_width and ends at time_measurement.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.change[:].profiles_1d[:].zeff_fit.weight</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.change[:].profiles_1d[:].zeff_fit.measured]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to each measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.commit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of external libraries used by the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library[:].commit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library[:].description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library[:].name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library[:].parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library[:].repository</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.library[:].version</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.output_flag</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.repository</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.code.version</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.comment</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.creation_date</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.homogeneous_time</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>User-defined name for this IDS occurrence</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.occurrence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p></p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.occurrence_type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of data contained in this occurrence<br>1) reconstruction : Equilibrium reconstruction<br>2) prediction_fixed : Equilibrium prediction, fixed boundary<br>3) prediction_free : Equilibrium prediction, free boundary<br>4) mapping : Used for mapping equilibrium results from one grid type / resolution to another, or for including variables not present in the first set such as the calculation of magnetic field of other derived parameters</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.occurrence_type.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.occurrence_type.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.occurrence_type.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Information about the plugins used to write/read this IDS. This structure is filled automatically by the Access Layer at GET/PUT time, no need to fill it via a user program.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_get</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to GET the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_get.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_get.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_get.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_get.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_get.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to PUT the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_put.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_put.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_put.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_put.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.infrastructure_put.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which a plugin has been applied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins actually used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application). This information is filled by the plugin infrastructure during the GET operation.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].get_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the plugin applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins used to PUT a node (potentially, multiple plugins can be applied, if so they are listed by order of application)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].put_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins to be used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.plugins.node[:].readback[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.provenance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Provenance information about this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.provenance.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which the provenance is given. The provenance information applies to the whole structure below the IDS node. For documenting provenance information for the whole IDS, set the size of this array of structure to 1 and leave the child "path" node empty</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.provenance.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the provenance information applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.provenance.node[:].sources</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>List of sources used to import or calculate this node, identified as explained below. In case the node is the result of of a calculation / data processing, the source is an input to the process described in the "code" structure at the root of the IDS. The source can be an IDS (identified by a URI or a persitent identifier, see syntax in the link below) or non-IDS data imported directly from an non-IMAS database (identified by the command used to import the source, or the persistent identifier of the data source). Often data are obtained by a chain of processes, however only the last process input are recorded here. The full chain of provenance has then to be reconstructed recursively from the provenance information contained in the data sources.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.provider</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.source</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...). Superseeded by the new provenance structure.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.version_put</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.version_put.access_layer</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.version_put.access_layer_language</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.ids_properties.version_put.data_dictionary</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>core_instant_changes.time</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.vacuum_toroidal_field</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in Rho_Tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.vacuum_toroidal_field.b0</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[core_instant_changes.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewing from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>core_instant_changes.vacuum_toroidal_field.r0</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane)</p></td></tr>
   </table>
   </table><p></p>
