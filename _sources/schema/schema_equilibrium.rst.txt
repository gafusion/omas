
equilibrium
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Description of a 2D, axi-symmetric, tokamak equilibrium; result of an equilibrium code.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.commit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of external libraries used by the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library[:].commit</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library[:].description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library[:].name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library[:].parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library[:].repository</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.library[:].version</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.output_flag</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.parameters</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.repository</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.code.version</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Grids (using the Generic Grid Description), for various time slices. The timebase of this array of structure must be a subset of the time_slice timebase</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.grids_ggd[:].grid</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of GGD grids for describing the equilibrium, at a given time slice</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].base</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].base[:].jacobian</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid[:].grid_subset[:].element]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Metric Jacobian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].base[:].tensor_contravariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].base[:].tensor_covariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].dimension</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Space dimension of the grid subset elements, using the convention 1=nodes, 2=edges, 3=faces, 4=cells/volumes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.grids_ggd[:].grid[:].grid_subset[:].element</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].element[:].object</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].element[:].object[:].dimension</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Dimension of the object - using the convention  1=nodes, 2=edges, 3=faces, 4=cells/volumes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].element[:].object[:].index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Object index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].element[:].object[:].space</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the space from which that object is taken</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid subset identifier<br>0) unspecified : unspecified<br>1) nodes : All nodes (0D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure). In case of a structured grid represented with multiple 1D spaces, the order of the implicit elements in the grid_subset follows Fortran ordering, i.e. iterate always on nodes of the first space first, then move to the second node of the second space, ... : [((s1_1 to s1_end), s2_1, s3_1 ... sN_1), (((s1_1 to s1_end), s2_2, s3_1, ... sN_1)), ... ((s1_1 to s1_end), s2_end, s3_end ... sN_end)]<br>2) edges : All edges (1D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>3) x_aligned_edges : All x-aligned (poloidally) aligned edges belonging to the associated spaces<br>4) y_aligned_edges : All y-aligned (radially) aligned edges belonging to the associated spaces<br>5) cells : All cells (2D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>6) x_points : Nodes defining x-points<br>7) core_cut : y-aligned edges inside the separatrix connecting to the active x-point<br>8) PFR_cut : y-aligned edges in the private flux region connecting to the active x-point<br>9) outer_throat : y-aligned edges in the outer SOL connecting to the active x-point<br>10) inner_throat : y-aligned edges in the inner SOL connecting to the active x-point<br>11) outer_midplane : y-aligned edges connecting to the node closest to outer midplane on the separatrix<br>12) inner_midplane : y-aligned edges connecting to the node closest to inner midplane on the separatrix<br>13) outer_target : y-aligned edges defining the outer target<br>14) inner_target : y-aligned edges defining the inner target<br>15) core_boundary : Innermost x-aligned edges<br>16) separatrix : x-aligned edges defining the active separatrix<br>17) main_chamber_wall : x-aligned edges defining main chamber wall outside of the divertor regions<br>18) outer_baffle : x-aligned edges defining the chamber wall of the outer active divertor region<br>19) inner_baffle : x-aligned edges defining the chamber wall of the inner active divertor region<br>20) outer_PFR_wall : x-aligned edges defining the private flux region wall of the outer active divertor region<br>21) inner_PFR_wall : x-aligned edges defining the private flux region wall of the inner active divertor region<br>22) core : Cells inside the active separatrix<br>23) sol : Cells defining the main SOL outside of the divertor regions<br>24) outer_divertor : Cells defining the outer divertor region<br>25) inner_divertor : Cells defining the inner divertor region<br>26) core_sol : x-aligned edges defining part of active separatrix separating core and sol<br>27) full_main_chamber_wall : main_chamber_wall + outer_baffle(s) + inner_baffle(s)<br>28) full_PFR_wall : outer_PFR__wall(s) + inner_PFR_wall(s)<br>29) core_cut_X2 : y-aligned edges inside the separatrix connecting to the non-active x-point<br>30) PFR_cut_X2 : y-aligned edges in the private flux region connecting to the non-active x-point<br>31) outer_throat_X2 : y-aligned edges in the outer SOL connecting to the non-active x-point<br>32) inner_throat_X2 : y-aligned edges in the inner SOL connecting to the non-active x-point<br>33) separatrix_2 : x-aligned edges defining the non-active separatrix<br>34) outer_baffle_2 : x-aligned edges defining the chamber wall of the outer non-active divertor region<br>35) inner_baffle_2 : x-aligned edges defining the chamber wall of the inner non-active divertor region<br>36) outer_PFR_wall_2 : x-aligned edges defining the private flux region wall of the outer non-active divertor region<br>37) inner_PFR_wall_2 : x-aligned edges defining the private flux region wall of the inner non-active divertor region<br>38) intra_sep : Cells between the two separatrices<br>39) outer_divertor_2 : Cells defining the outer inactive divertor region<br>40) inner_divertor_2 : Cells defining the inner inactive divertor region<br>41) outer_target_2 : y-aligned edges defining the outer inactive target<br>42) inner_target_2 : y-aligned edges defining the inner inactive target<br>43) volumes : All volumes (3D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>44) full_wall : All edges defining walls, baffles, and targets<br>45) outer_sf_leg_entrance_1 : y-aligned edges defining the SOL entrance of the first snowflake outer leg<br>46) outer_sf_leg_entrance_2 : y-aligned edges defining the SOL entrance of the third snowflake outer leg<br>47) outer_sf_pfr_connection_1 : y-aligned edges defining the connection between the outer snowflake entrance and third leg<br>48) outer_sf_pfr_connection_2 : y-aligned edges defining the connection between the outer snowflake first and second leg<br>100) magnetic_axis : Point corresponding to the magnetic axis<br>101) outer_mid_plane_separatrix : Point on active separatrix at outer mid-plane<br>102) inner_mid_plane_separatrix : Point on active separatrix at inner mid-plane<br>103) outer_target_separatrix : Point on active separatrix at outer active target<br>104) inner_target_separatrix : Point on active separatrix at inner active target<br>105) outer_target_separatrix_2 : Point on non-active separatrix at outer non-active target<br>106) inner_target_separatrix_2 : Point on non-active separatrix at inner non-active target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].metric</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].metric.jacobian</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid[:].grid_subset[:].element]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Metric Jacobian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].metric.tensor_contravariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].grid_subset[:].metric.tensor_covariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid identifier<br>0) unspecified : unspecified<br>1) linear : Linear<br>2) cylinder : Cylindrical geometry (straight in axial direction)<br>3) limiter : Limiter<br>4) SN : Single null<br>5) CDN : Connected double null<br>6) DDN_bottom : Disconnected double null with inner X-point below the midplane<br>7) DDN_top : Disconnected double null with inner X-point above the midplane<br>8) annulus : Annular geometry (not necessarily with straight axis)<br>9) stellarator_island : Stellarator island geometry<br>10) structured_spaces : Structured grid represented with multiple spaces of dimension 1<br>11) LFS_snowflake_minus : Snowflake grid with secondary x point on the low field side, and the secondary separatrix on top of the primary<br>12) LFS_snowflake_plus : Snowflake grid with secondary x point to the right of the primary, and the secondary separatrix below the primary<br>100) reference : Refers to a GGD described in another IDS indicated by grid_path. In such a case, do not fill the grid_ggd node of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the grid, including the IDS name, in case of implicit reference to a grid_ggd node described in another IDS. To be filled only if the grid is not described explicitly in this grid_ggd structure. Example syntax: 'wall:0/description_ggd(1)/grid_ggd', means that the grid is located in the wall IDS, occurrence 0, with ids path 'description_ggd(1)/grid_ggd'. See the link below for more details about IDS paths</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].coordinates_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therefore defines the dimension of the space. The meaning of these predefined integer constants can be found in the Data Dictionary under utilities/coordinate_identifier.xml</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier, >1: Fourier with periodicity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].geometry_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].geometry_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].geometry_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Space identifier<br>0) unspecified : unspecified<br>1) primary_standard : Primary space defining the standard grid<br>2) primary_staggered : Primary space defining a grid staggered with respect to the primary standard space<br>3) secondary_structured : Secondary space defining additional dimensions that extend the primary standard space in a structured way</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].geometry_content</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Content of the ../object/geometry node for this dimension<br>0) unspecified : unspecified<br>1) node_coordinates : For nodes : node coordinates<br>11) node_coordinates_connection : For nodes : node coordinates, then connection length, and distance in the poloidal plane to the nearest solid surface outside the separatrix<br>21) edge_areas : For edges : contains 3 surface areas after uniform extension in the third dimension of the edges. Geometry(1) and geometry(2) are the projections of that area along the local poloidal and radial coordinate respectively. Geometry(3) is the full surface area of the extended edge<br>31) face_indices_volume : For faces : coordinates indices (ix, iy) of the face within the structured grid of the code. The third element contains the volume after uniform extension in the third dimension of the faces<br>32) face_indices_volume_connection : For faces : coordinates indices (ix, iy) of the face within the structured grid of the code. The third element contains the volume after uniform extension in the third dimension of the faces. The fourth element is the connection length. The fifth element is the distance in the poloidal plane to the nearest solid surface outside the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].geometry_content.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].geometry_content.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].geometry_content.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].boundary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of  (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].boundary[:].index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of this (n-1)-dimensional boundary object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].geometry</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Geometry data associated with the object, its detailed content is defined by ../../geometry_content. Its dimension depends on the type of object, geometry and coordinate considered. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].geometry_2d</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>2D geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. Typically, the first dimension represents the object coordinates, while the second dimension would represent the values of the various degrees of freedom of the finite element attached to the object.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].measure</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^dimension</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.grids_ggd[:].grid[:].space[:].objects_per_dimension[:].object[:].nodes</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.grids_ggd[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.comment</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.creation_date</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.homogeneous_time</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>User-defined name for this IDS occurrence</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.occurrence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p></p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.occurrence_type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of data contained in this occurrence<br>1) reconstruction : Equilibrium reconstruction<br>2) prediction_fixed : Equilibrium prediction, fixed boundary<br>3) prediction_free : Equilibrium prediction, free boundary<br>4) mapping : Used for mapping equilibrium results from one grid type / resolution to another, or for including variables not present in the first set such as the calculation of magnetic field of other derived parameters</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.occurrence_type.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.occurrence_type.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.occurrence_type.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Information about the plugins used to write/read this IDS. This structure is filled automatically by the Access Layer at GET/PUT time, no need to fill it via a user program.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_get</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to GET the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_get.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_get.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_get.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_get.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_get.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to PUT the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_put.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_put.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_put.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_put.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.infrastructure_put.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which a plugin has been applied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins actually used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application). This information is filled by the plugin infrastructure during the GET operation.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].get_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the plugin applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins used to PUT a node (potentially, multiple plugins can be applied, if so they are listed by order of application)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].put_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins to be used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.plugins.node[:].readback[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.provenance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Provenance information about this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.provenance.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which the provenance is given. The provenance information applies to the whole structure below the IDS node. For documenting provenance information for the whole IDS, set the size of this array of structure to 1 and leave the child "path" node empty</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.provenance.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the provenance information applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.provenance.node[:].sources</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>List of sources used to import or calculate this node, identified as explained below. In case the node is the result of of a calculation / data processing, the source is an input to the process described in the "code" structure at the root of the IDS. The source can be an IDS (identified by a URI or a persitent identifier, see syntax in the link below) or non-IDS data imported directly from an non-IMAS database (identified by the command used to import the source, or the persistent identifier of the data source). Often data are obtained by a chain of processes, however only the last process input are recorded here. The full chain of provenance has then to be reconstructed recursively from the provenance information contained in the data sources.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.provider</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.source</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...). Superseeded by the new provenance structure.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.version_put</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.version_put.access_layer</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.version_put.access_layer_language</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.ids_properties.version_put.data_dictionary</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of equilibria at various time slices</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Description of the plasma boundary used by fixed-boundary codes and typically chosen at psi_norm = 99.x% of the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.active_limiter_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ position of the active limiter point (point of the plasma boundary in contact with the limiter)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.active_limiter_point.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.active_limiter_point.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.b_flux_pol_norm</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value of the normalised poloidal flux at which the boundary is taken</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.elongation</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.elongation_lower</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation (lower half w.r.t. geometric axis) of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.elongation_upper</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation (upper half w.r.t. geometric axis) of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.geometric_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ position of the geometric axis (defined as (Rmin+Rmax) / 2 and (Zmin+Zmax) / 2 of the boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.geometric_axis.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.geometric_axis.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.lcfs</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ description of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].boundary.lcfs.r</strong></p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.lcfs.z</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].boundary.lcfs.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.minor_radius</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Minor radius of the plasma boundary (defined as (Rmax-Rmin) / 2 of the boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.outline</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ outline of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].boundary.outline.r</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.outline.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].boundary.outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.psi</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal flux at which the boundary is taken</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.psi_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value of the normalised poloidal flux at which the boundary is taken (typically 99.x %), the flux being normalised to its value at the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.squareness_lower_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Lower inner squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.squareness_lower_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Lower outer squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.squareness_upper_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Upper inner squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.squareness_upper_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Upper outer squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.strike_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of strike points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.strike_point[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.strike_point[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.triangularity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.triangularity_lower</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Lower triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.triangularity_upper</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Upper triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>0 (limiter) or 1 (diverted)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.x_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of X-points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.x_point[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary.x_point[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Geometry of the secondary separatrix, defined as the outer flux surface with an X-point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.distance_inner_outer</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Distance between the inner and outer separatrices, in the major radius direction, at the plasma outboard and at the height corresponding to the maximum R for the inner separatrix.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.outline</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ outline of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].boundary_secondary_separatrix.outline.r</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.outline.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].boundary_secondary_separatrix.outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.psi</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal flux at the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.strike_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of strike points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.strike_point[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.strike_point[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.x_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of X-points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.x_point[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_secondary_separatrix.x_point[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Description of the plasma boundary at the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.active_limiter_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ position of the active limiter point (point of the plasma boundary in contact with the limiter)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.active_limiter_point.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.active_limiter_point.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.closest_wall_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position and distance to the plasma boundary of the point of the first wall which is the closest to plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.closest_wall_point.distance</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Distance to the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.closest_wall_point.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.closest_wall_point.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.dr_dz_zero_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Outboard point on the separatrix on which dr/dz = 0 (local maximum of the major radius of the separatrix). In case of multiple local maxima, the closest one from z=z_magnetic_axis is chosen. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.dr_dz_zero_point.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.dr_dz_zero_point.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.elongation</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.elongation_lower</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation (lower half w.r.t. geometric axis) of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.elongation_upper</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation (upper half w.r.t. geometric axis) of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of gaps, defined by a reference point and a direction.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap[:].angle</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Angle measured clockwise from radial cylindrical vector (grad R) to gap vector (pointing away from reference point)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap[:].identifier</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Identifier of the gap</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap[:].name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the gap</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius of the reference point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap[:].value</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Value of the gap, i.e. distance between the reference point and the separatrix along the gap direction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.gap[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height of the reference point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.geometric_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ position of the geometric axis (defined as (Rmin+Rmax) / 2 and (Zmin+Zmax) / 2 of the boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.geometric_axis.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.geometric_axis.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.minor_radius</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Minor radius of the plasma boundary (defined as (Rmax-Rmin) / 2 of the boundary)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.outline</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ outline of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].boundary_separatrix.outline.r</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.outline.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].boundary_separatrix.outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.psi</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value of the poloidal flux at the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.squareness_lower_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Lower inner squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.squareness_lower_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Lower outer squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.squareness_upper_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Upper inner squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.squareness_upper_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Upper outer squareness of the plasma boundary (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.strike_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of strike points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.strike_point[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.strike_point[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.triangularity</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.triangularity_inner</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Inner triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.triangularity_lower</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Lower triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.triangularity_minor</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Minor triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.triangularity_outer</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Outer triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.triangularity_upper</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Upper triangularity of the plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>0 (limiter) or 1 (diverted)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.x_point</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of X-points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.x_point[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].boundary_separatrix.x_point[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>In case of equilibrium reconstruction under constraints, measurements used to constrain the equilibrium, reconstructed values and accuracy of the fit. The names of the child nodes correspond to the following definition: the solver aims at minimizing a cost function defined as : J=1/2*sum_i [ weight_i^2 (reconstructed_i - measured_i)^2 / sigma_i^2 ]. in which sigma_i is the standard deviation of the measurement error (to be found in the IDS of the measurement)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>T.m</p></td><td><p>Vacuum field times major radius in the toroidal field magnet. Positive sign means anti-clockwise when viewed from above</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T.m</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T.m</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.b_field_tor_vacuum_r.weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[magnetics.bpol_probe]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>T</p></td><td><p>Set of poloidal field probes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.bpol_probe[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.chi_squared_reduced</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Sum of the chi_squared of all constraints used for the equilibrium reconstruction, divided by the number of degrees of freedom of the identification model</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.constraints_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of constraints used (i.e. having a non-zero weight)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>Wb</p></td><td><p>Diamagnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.diamagnetic_flux.weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[polarimeter.channel]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>rad</p></td><td><p>Set of faraday angles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.faraday_angle[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[magnetics.flux_loop]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Wb</p></td><td><p>Set of flux loops</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.flux_loop[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.freedom_degrees_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of degrees of freedom of the identification model</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>A</p></td><td><p>Plasma current. Positive sign means anti-clockwise when viewed from above</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.ip.weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[iron_core.segment]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>T</p></td><td><p>Magnetisation M of a set of iron core segments</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>T</p></td><td><p>Magnetisation M of the iron core segment along the major radius axis, assumed to be constant inside a given iron segment. Reminder : H = 1/mu0 * B - mur * M;</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_r.weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>T</p></td><td><p>Magnetisation M of the iron core segment along the vertical axis, assumed to be constant inside a given iron segment. Reminder : H = 1/mu0 * B - mur * M;</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.iron_core_segment[:].magnetisation_z.weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A.m^-2</p></td><td><p>Set of flux-surface averaged parallel current density approximations at various positions (= average(j.B) / B0, where B0 = /vacuum_toroidal_field/b0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position at which this measurement is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].position.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].position.rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_parallel[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A.m^-2</p></td><td><p>Set of flux-surface averaged toroidal current density approximations at various positions  (= average(j_tor/R) / average(1/R))</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position at which this measurement is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].position.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].position.rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.j_tor[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[mse.channel]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>rad</p></td><td><p>Set of MSE polarisation angles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.mse_polarisation_angle[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-3</p></td><td><p>Set of local density measurements</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-3</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position at which this measurement is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].position.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].position.rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[interferometer.channel]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2</p></td><td><p>Set of line integrated density measurements</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.n_e_line[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[pf_active.coil]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A</p></td><td><p>Current in a set of poloidal field coils</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_current[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[pf_passive.loop]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A</p></td><td><p>Current in a set of axisymmetric passive conductors</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pf_passive_current[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Pa</p></td><td><p>Set of total pressure estimates</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Pa</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Pa</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position at which this measurement is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].position.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].position.rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Pa</p></td><td><p>Set of rotational pressure estimates. The rotational pressure is defined as R0^2*rho*omega^2 / 2, where omega is the toroidal rotation frequency, rho=ne(R0,psi)*m, and m is the plasma equivalent mass.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Pa</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Pa</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position at which this measurement is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].position.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].position.rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.pressure_rotational[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>-</p></td><td><p>Set of safety factor estimates at various positions</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].chi_squared</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Squared error normalized by the variance considered in the minimization process : chi_squared = weight^2 *(reconstructed - measured)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Measured value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position at which this measurement is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].position.psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal magnetic flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].position.rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Value calculated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.q[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of strike points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].chi_squared_r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Squared error on the major radius normalized by the variance considered in the minimization process : chi_squared = weight^2 *(position_reconstructed/r - position_measured/r)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].chi_squared_z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Squared error on the altitude normalized by the variance considered in the minimization process : chi_squared = weight^2 *(position_reconstructed/z - position_measured/z)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].position_measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Measured or estimated position</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].position_measured.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].position_measured.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].position_reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position estimated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].position_reconstructed.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].position_reconstructed.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.strike_point[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Array of X-points, for each of them the RZ position is given</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].chi_squared_r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Squared error on the major radius normalized by the variance considered in the minimization process : chi_squared = weight^2 *(position_reconstructed/r - position_measured/r)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].chi_squared_z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Squared error on the altitude normalized by the variance considered in the minimization process : chi_squared = weight^2 *(position_reconstructed/z - position_measured/z)^2 / sigma^2, where sigma is the standard deviation of the measurement error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].exact</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer flag : 1 means exact data, taken as an exact input without being fitted; 0 means the equilibrium code does a least square fit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].position_measured</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Measured or estimated position</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].position_measured.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].position_measured.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].position_reconstructed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position estimated from the reconstructed equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].position_reconstructed.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].position_reconstructed.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].source</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path to the source data for this measurement in the IMAS data dictionary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].time_measurement</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exact time slice used from the time array of the measurement source data. If the time slice does not exist in the time array of the source data, it means linear interpolation has been used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].constraints.x_point[:].weight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Weight given to the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Convergence details</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.grad_shafranov_deviation_expression</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Expression for calculating the residual deviation between the left and right hand side of the Grad Shafranov equation<br>1) absolute_gs_difference : Average absolute difference of the Grad-Shafranov equation, <|Del* psi - j_tor*R|>, averaged over the plasma poloidal cross-section<br>2) root_mean_square_gs_difference : Root mean square difference of the Grad-Shafranov equation, sqrt(<(Del* psi - j_tor*R)^2 >), averaged over the plasma poloidal cross-section<br>3) max_absolute_psi_residual : Maximum absolute difference over the plasma poloidal cross-section of the poloidal flux between the current and preceding iteration, on fixed grid points<br>4) max_absolute_gs_difference_norm : Maximum absolute difference of the Grad-Shafranov equation, normalised, max(|Del* psi - j_tor*R|) / max(|Del* psi|), over the plasma poloidal cross-section<br>5) max_root_mean_square_gs_difference_norm : Root maximum square difference of the Grad-Shafranov equation, normalised, sqrt(max((Del* psi - j_tor*R)^2) / max((Del* psi)^2)), over the plasma poloidal cross-section<br>6) max_absolute_psi_residual_norm : Maximum absolute difference over the plasma poloidal cross-section of the normalised poloidal flux (with normalization being the poloidal flux difference between the axis and boundary) between the current and preceding iteration, on fixed grid points</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.grad_shafranov_deviation_expression.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.grad_shafranov_deviation_expression.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.grad_shafranov_deviation_expression.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.grad_shafranov_deviation_value</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>mixed</p></td><td><p>Value of the residual deviation between the left and right hand side of the Grad Shafranov equation, evaluated as per grad_shafranov_deviation_expression</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.iterations_n</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of iterations carried out in the convergence loop</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.result</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Convergence result<br>1) converged : Converged case with plasma<br>2) vacuum : Vacuum reconstruction (when ip < ip_threshold)<br>10) unconverged : Unconverged case with plasma<br>20) fatal_error : Fatal error</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.result.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.result.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].convergence.result.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Flux surface coordinate system on a square grid of flux and poloidal angle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g11_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g11, contravariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g11_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g11,  covariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g12_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g12, contravariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g12_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g12, covariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g13_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g13,  contravariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g13_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g13, covariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g22_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g22,  contravariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g22_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g22, covariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g23_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g23, contravariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g23_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g23,  covariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g33_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g33,  contravariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.g33_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>metric coefficients g33, covariant metric tensor for the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.grid</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Definition of the 2D grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].coordinate_system.grid.dim1</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>First dimension values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].coordinate_system.grid.dim2</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Second dimension values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.grid.volume_element</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^3</p></td><td><p>Elementary plasma volume of plasma enclosed in the cell formed by the nodes [dim1(i) dim2(j)], [dim1(i+1) dim2(j)], [dim1(i) dim2(j+1)] and [dim1(i+1) dim2(j+1)]</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.grid_type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of coordinate system</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.grid_type.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.grid_type.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.grid_type.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.jacobian</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>Absolute value of the jacobian of the coordinate system</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Values of the major radius on the grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.tensor_contravariant</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2,<br> 1...3,<br> 1...3]</p></td><td><p>FLT_4D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor on every point of the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.tensor_covariant</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2,<br> 1...3,<br> 1...3]</p></td><td><p>FLT_4D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor on every point of the grid described by grid_type</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].coordinate_system.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].coordinate_system.grid.dim1,<br> equilibrium.time_slice[:].coordinate_system.grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Values of the Height on the grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.grids_ggd[:].grid]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of equilibrium representations using the generic grid description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>T</p></td><td><p>R component of the poloidal magnetic field, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].b_field_r[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].b_field_r[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>T</p></td><td><p>Toroidal component of the magnetic field, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].b_field_tor[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].b_field_tor[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>T</p></td><td><p>Z component of the poloidal magnetic field, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].b_field_z[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].b_field_z[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:].jacobian</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Metric Jacobian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].dimension</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Space dimension of the grid subset elements, using the convention 1=nodes, 2=edges, 3=faces, 4=cells/volumes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element</strong></p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Dimension of the object - using the convention  1=nodes, 2=edges, 3=faces, 4=cells/volumes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:].index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Object index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:].space</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the space from which that object is taken</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid subset identifier<br>0) unspecified : unspecified<br>1) nodes : All nodes (0D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure). In case of a structured grid represented with multiple 1D spaces, the order of the implicit elements in the grid_subset follows Fortran ordering, i.e. iterate always on nodes of the first space first, then move to the second node of the second space, ... : [((s1_1 to s1_end), s2_1, s3_1 ... sN_1), (((s1_1 to s1_end), s2_2, s3_1, ... sN_1)), ... ((s1_1 to s1_end), s2_end, s3_end ... sN_end)]<br>2) edges : All edges (1D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>3) x_aligned_edges : All x-aligned (poloidally) aligned edges belonging to the associated spaces<br>4) y_aligned_edges : All y-aligned (radially) aligned edges belonging to the associated spaces<br>5) cells : All cells (2D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>6) x_points : Nodes defining x-points<br>7) core_cut : y-aligned edges inside the separatrix connecting to the active x-point<br>8) PFR_cut : y-aligned edges in the private flux region connecting to the active x-point<br>9) outer_throat : y-aligned edges in the outer SOL connecting to the active x-point<br>10) inner_throat : y-aligned edges in the inner SOL connecting to the active x-point<br>11) outer_midplane : y-aligned edges connecting to the node closest to outer midplane on the separatrix<br>12) inner_midplane : y-aligned edges connecting to the node closest to inner midplane on the separatrix<br>13) outer_target : y-aligned edges defining the outer target<br>14) inner_target : y-aligned edges defining the inner target<br>15) core_boundary : Innermost x-aligned edges<br>16) separatrix : x-aligned edges defining the active separatrix<br>17) main_chamber_wall : x-aligned edges defining main chamber wall outside of the divertor regions<br>18) outer_baffle : x-aligned edges defining the chamber wall of the outer active divertor region<br>19) inner_baffle : x-aligned edges defining the chamber wall of the inner active divertor region<br>20) outer_PFR_wall : x-aligned edges defining the private flux region wall of the outer active divertor region<br>21) inner_PFR_wall : x-aligned edges defining the private flux region wall of the inner active divertor region<br>22) core : Cells inside the active separatrix<br>23) sol : Cells defining the main SOL outside of the divertor regions<br>24) outer_divertor : Cells defining the outer divertor region<br>25) inner_divertor : Cells defining the inner divertor region<br>26) core_sol : x-aligned edges defining part of active separatrix separating core and sol<br>27) full_main_chamber_wall : main_chamber_wall + outer_baffle(s) + inner_baffle(s)<br>28) full_PFR_wall : outer_PFR__wall(s) + inner_PFR_wall(s)<br>29) core_cut_X2 : y-aligned edges inside the separatrix connecting to the non-active x-point<br>30) PFR_cut_X2 : y-aligned edges in the private flux region connecting to the non-active x-point<br>31) outer_throat_X2 : y-aligned edges in the outer SOL connecting to the non-active x-point<br>32) inner_throat_X2 : y-aligned edges in the inner SOL connecting to the non-active x-point<br>33) separatrix_2 : x-aligned edges defining the non-active separatrix<br>34) outer_baffle_2 : x-aligned edges defining the chamber wall of the outer non-active divertor region<br>35) inner_baffle_2 : x-aligned edges defining the chamber wall of the inner non-active divertor region<br>36) outer_PFR_wall_2 : x-aligned edges defining the private flux region wall of the outer non-active divertor region<br>37) inner_PFR_wall_2 : x-aligned edges defining the private flux region wall of the inner non-active divertor region<br>38) intra_sep : Cells between the two separatrices<br>39) outer_divertor_2 : Cells defining the outer inactive divertor region<br>40) inner_divertor_2 : Cells defining the inner inactive divertor region<br>41) outer_target_2 : y-aligned edges defining the outer inactive target<br>42) inner_target_2 : y-aligned edges defining the inner inactive target<br>43) volumes : All volumes (3D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>44) full_wall : All edges defining walls, baffles, and targets<br>45) outer_sf_leg_entrance_1 : y-aligned edges defining the SOL entrance of the first snowflake outer leg<br>46) outer_sf_leg_entrance_2 : y-aligned edges defining the SOL entrance of the third snowflake outer leg<br>47) outer_sf_pfr_connection_1 : y-aligned edges defining the connection between the outer snowflake entrance and third leg<br>48) outer_sf_pfr_connection_2 : y-aligned edges defining the connection between the outer snowflake first and second leg<br>100) magnetic_axis : Point corresponding to the magnetic axis<br>101) outer_mid_plane_separatrix : Point on active separatrix at outer mid-plane<br>102) inner_mid_plane_separatrix : Point on active separatrix at inner mid-plane<br>103) outer_target_separatrix : Point on active separatrix at outer active target<br>104) inner_target_separatrix : Point on active separatrix at inner active target<br>105) outer_target_separatrix_2 : Point on non-active separatrix at outer non-active target<br>106) inner_target_separatrix_2 : Point on non-active separatrix at inner non-active target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier.description</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier.index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier.name</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric.jacobian</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Metric Jacobian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric.tensor_covariant</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.identifier</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid identifier<br>0) unspecified : unspecified<br>1) linear : Linear<br>2) cylinder : Cylindrical geometry (straight in axial direction)<br>3) limiter : Limiter<br>4) SN : Single null<br>5) CDN : Connected double null<br>6) DDN_bottom : Disconnected double null with inner X-point below the midplane<br>7) DDN_top : Disconnected double null with inner X-point above the midplane<br>8) annulus : Annular geometry (not necessarily with straight axis)<br>9) stellarator_island : Stellarator island geometry<br>10) structured_spaces : Structured grid represented with multiple spaces of dimension 1<br>11) LFS_snowflake_minus : Snowflake grid with secondary x point on the low field side, and the secondary separatrix on top of the primary<br>12) LFS_snowflake_plus : Snowflake grid with secondary x point to the right of the primary, and the secondary separatrix below the primary<br>100) reference : Refers to a GGD described in another IDS indicated by grid_path. In such a case, do not fill the grid_ggd node of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.identifier.description</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.identifier.index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.identifier.name</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.path</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the grid, including the IDS name, in case of implicit reference to a grid_ggd node described in another IDS. To be filled only if the grid is not described explicitly in this grid_ggd structure. Example syntax: 'wall:0/description_ggd(1)/grid_ggd', means that the grid is located in the wall IDS, occurrence 0, with ids path 'description_ggd(1)/grid_ggd'. See the link below for more details about IDS paths</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].coordinates_type</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therefore defines the dimension of the space. The meaning of these predefined integer constants can be found in the Data Dictionary under utilities/coordinate_identifier.xml</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier, >1: Fourier with periodicity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type.description</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type.index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type.name</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].identifier</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Space identifier<br>0) unspecified : unspecified<br>1) primary_standard : Primary space defining the standard grid<br>2) primary_staggered : Primary space defining a grid staggered with respect to the primary standard space<br>3) secondary_structured : Secondary space defining additional dimensions that extend the primary standard space in a structured way</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].identifier.description</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].identifier.index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].identifier.name</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].geometry_content</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Content of the ../object/geometry node for this dimension<br>0) unspecified : unspecified<br>1) node_coordinates : For nodes : node coordinates<br>11) node_coordinates_connection : For nodes : node coordinates, then connection length, and distance in the poloidal plane to the nearest solid surface outside the separatrix<br>21) edge_areas : For edges : contains 3 surface areas after uniform extension in the third dimension of the edges. Geometry(1) and geometry(2) are the projections of that area along the local poloidal and radial coordinate respectively. Geometry(3) is the full surface area of the extended edge<br>31) face_indices_volume : For faces : coordinates indices (ix, iy) of the face within the structured grid of the code. The third element contains the volume after uniform extension in the third dimension of the faces<br>32) face_indices_volume_connection : For faces : coordinates indices (ix, iy) of the face within the structured grid of the code. The third element contains the volume after uniform extension in the third dimension of the faces. The fourth element is the connection length. The fifth element is the distance in the poloidal plane to the nearest solid surface outside the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].geometry_content.description</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].geometry_content.index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].geometry_content.name</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of  (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of this (n-1)-dimensional boundary object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Geometry data associated with the object, its detailed content is defined by ../../geometry_content. Its dimension depends on the type of object, geometry and coordinate considered. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry_2d</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>2D geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. Typically, the first dimension represents the object coordinates, while the second dimension would represent the values of the various degrees of freedom of the finite element attached to the object.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^dimension</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_parallel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A.m^-2</p></td><td><p>Parallel (to magnetic field) plasma current density, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].j_parallel[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].j_parallel[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A.m^-2</p></td><td><p>Toroidal plasma current density, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_tor[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].j_tor[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_tor[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].j_tor[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].j_tor[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Wb</p></td><td><p>Values of the toroidal flux, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].phi[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].phi[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>Wb</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].phi[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].phi[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].phi[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Wb</p></td><td><p>Values of the poloidal flux, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].psi[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].psi[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>Wb</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].psi[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].psi[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].psi[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m</p></td><td><p>Values of the major radius on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].r[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].r[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].r[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].r[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].r[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].theta</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>rad</p></td><td><p>Values of the poloidal angle, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].theta[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].theta[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].theta[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].theta[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].theta[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m</p></td><td><p>Values of the Height on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].z[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].ggd[:].z[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].z[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].ggd[:].z[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].ggd[:].z[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>0D parameters of the equilibrium</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.area</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Area of the LCFS poloidal cross section</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.beta_normal</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal beta, defined as 100 * beta_tor * a[m] * B0 [T] / ip [MA] </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.beta_pol</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Poloidal beta. Defined as betap = 4 int(p dV) / [R_0 * mu_0 * Ip^2]</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.beta_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Toroidal beta, defined as the volume-averaged total perpendicular pressure divided by (B0^2/(2*mu0)), i.e. beta_toroidal = 2 mu0 int(p dV) / V / B0^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.current_centre</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position and vertical velocity of the current centre</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.current_centre.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius of the current center, defined as integral over the poloidal cross section of (j_tor*r*dS) / Ip</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.current_centre.velocity_z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Vertical velocity of the current center</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.current_centre.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height of the current center, defined as integral over the poloidal cross section of (j_tor*z*dS) / Ip</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.energy_mhd</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>J</p></td><td><p>Plasma energy content = 3/2 * int(p,dV) with p being the total pressure (thermal + fast particles) [J]. Time-dependent; Scalar</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.ip</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>A</p></td><td><p>Plasma current (toroidal component). Positive sign means anti-clockwise when viewed from above.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.length_pol</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Poloidal length of the magnetic surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.li_3</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Internal inductance</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.magnetic_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Magnetic axis position and toroidal field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.b_field_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Total toroidal magnetic field at the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.b_tor</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>T</p></td><td><p>Total toroidal magnetic field at the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius of the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height of the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.plasma_inductance</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>H</p></td><td><p>Plasma inductance 2 E_magnetic/Ip^2, where E_magnetic = 1/2 * int(psi.j_tor.dS) (integral over the plasma poloidal cross-section)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.plasma_resistance</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>ohm</p></td><td><p>Plasma resistance = int(e_field.j.dV) / Ip^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.psi_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal flux at the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.psi_boundary</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal flux at the selected plasma boundary </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.psi_external_average</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Average (over the plasma poloidal cross section) plasma poloidal magnetic flux produced by all external circuits (CS and PF coils, eddy currents, VS in-vessel coils), given by the following formula : int(psi_external.j_tor.dS) / Ip</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_95</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>q at the 95% poloidal flux surface (IMAS uses COCOS=11: only positive when toroidal current and magnetic field are in same direction)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>q at the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_min</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Minimum q value and position</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_min.psi</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Wb</p></td><td><p>Minimum q position in poloidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_min.psi_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Minimum q position in normalised poloidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_min.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Minimum q position in normalised toroidal flux coordinate</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.q_min.value</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>Minimum q value</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.rho_tor_boundary</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Toroidal flux coordinate at the selected plasma boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.surface</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface area of the toroidal flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.v_external</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>V</p></td><td><p>External voltage, i.e. time derivative of psi_external_average (with a minus sign : - d_psi_external_average/d_time)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.volume</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^3</p></td><td><p>Total plasma volume</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].global_quantities.w_mhd</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>J</p></td><td><p>Plasma energy content = 3/2 * int(p,dV) with p being the total pressure (thermal + fast particles) [J]. Time-dependent; Scalar</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Equilibrium profiles (1D radial grid) as a function of the poloidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.area</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Cross-sectional area of the flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.b_average</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Flux surface averaged B</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.b_field_average</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Flux surface averaged modulus of B (always positive, irrespective of the sign convention for the B-field direction).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.b_field_max</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Maximum(modulus(B)) on the flux surface (always positive, irrespective of the sign convention for the B-field direction)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.b_field_min</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Minimum(modulus(B)) on the flux surface (always positive, irrespective of the sign convention for the B-field direction)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.b_max</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Maximum(B) on the flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.b_min</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Minimum(B) on the flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.beta_pol</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Poloidal beta profile. Defined as betap = 4 int(p dV) / [R_0 * mu_0 * Ip^2]</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.darea_dpsi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2.Wb^-1</p></td><td><p>Radial derivative of the cross-sectional area of the flux surface with respect to psi</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.darea_drho_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Radial derivative of the cross-sectional area of the flux surface with respect to rho_tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.dpressure_dpsi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa.Wb^-1</p></td><td><p>Derivative of pressure w.r.t. psi</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.dpsi_drho_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb/m</p></td><td><p>Derivative of Psi with respect to Rho_Tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.dvolume_dpsi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^3.Wb^-1</p></td><td><p>Radial derivative of the volume enclosed in the flux surface with respect to Psi</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.dvolume_drho_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Radial derivative of the volume enclosed in the flux surface with respect to Rho_Tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.elongation</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Elongation</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.f</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T.m</p></td><td><p>Diamagnetic function (F=R B_Phi)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.f_df_dpsi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T^2.m^2/Wb</p></td><td><p>Derivative of F w.r.t. Psi, multiplied with F</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.geometric_axis</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>RZ position of the geometric axis of the magnetic surfaces (defined as (Rmin+Rmax) / 2 and (Zmin+Zmax) / 2 of the surface)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.geometric_axis.r</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.geometric_axis.z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm1</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Flux surface averaged 1/R^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm2</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2</p></td><td><p>Flux surface averaged |grad_rho_tor|^2/R^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm3</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Flux surface averaged |grad_rho_tor|^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm4</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T^-2</p></td><td><p>Flux surface averaged 1/B^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm5</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T^2</p></td><td><p>Flux surface averaged B^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm6</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T^-2</p></td><td><p>Flux surface averaged |grad_rho_tor|^2/B^2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm7</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Flux surface averaged |grad_rho_tor|</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm8</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Flux surface averaged R</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.gm9</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-1</p></td><td><p>Flux surface averaged 1/R</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.j_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Flux surface averaged approximation to parallel current density = average(j.B) / B0, where B0 = /vacuum_toroidal_field/b0</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.j_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Flux surface averaged toroidal current density = average(j_tor/R) / average(1/R)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.magnetic_shear</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.mass_density</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>kg.m^-3</p></td><td><p>Mass density</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.phi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Toroidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.pressure</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Pa</p></td><td><p>Pressure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].profiles_1d.psi</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>Poloidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.psi_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised poloidal flux, namely (psi(rho)-psi(magnetic_axis)) / (psi(LCFS)-psi(magnetic_axis))</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.q</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Safety factor (IMAS uses COCOS=11: only positive when toroidal current and magnetic field are in same direction)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.r_inboard</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Radial coordinate (major radius) on the inboard side of the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.r_outboard</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Radial coordinate (major radius) on the outboard side of the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.rho_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Toroidal flux coordinate = sqrt(phi/(pi*b0)), where the toroidal flux, phi, corresponds to time_slice/profiles_1d/phi, the toroidal magnetic field, b0, corresponds to vacuum_toroidal_field/b0 and pi can be found in the IMAS constants</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.rho_tor_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.rho_volume_norm</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Normalised square root of enclosed volume (radial coordinate). The normalizing value is the enclosed volume at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.squareness_lower_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Lower inner squareness (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.squareness_lower_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Lower outer squareness (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.squareness_upper_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Upper inner squareness (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.squareness_upper_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Upper outer squareness (definition from T. Luce, Plasma Phys. Control. Fusion 55 (2013) 095009)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.surface</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface area of the toroidal flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.trapped_fraction</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Trapped particle fraction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.triangularity_lower</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Lower triangularity w.r.t. magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.triangularity_upper</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Upper triangularity w.r.t. magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_1d.volume</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_1d.psi]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^3</p></td><td><p>Volume enclosed in the flux surface</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Equilibrium 2D profiles in the poloidal plane. Multiple 2D representations of the equilibrium can be stored here.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].b_field_r</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>R component of the poloidal magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].b_field_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Toroidal component of the magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].b_field_z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Z component of the poloidal magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].b_r</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>R component of the poloidal magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].b_tor</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Toroidal component of the magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].b_z</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Z component of the poloidal magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].grid</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Definition of the 2D grid (the content of dim1 and dim2 is defined by the selected grid_type)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].profiles_2d[:].grid.dim1</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>First dimension values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].profiles_2d[:].grid.dim2</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Second dimension values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].grid.volume_element</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^3</p></td><td><p>Elementary plasma volume of plasma enclosed in the cell formed by the nodes [dim1(i) dim2(j)], [dim1(i+1) dim2(j)], [dim1(i) dim2(j+1)] and [dim1(i+1) dim2(j+1)]</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].grid_type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Selection of one of a set of grid types<br>1) rectangular : Cylindrical R,Z ala eqdsk (R=dim1, Z=dim2). In this case the position arrays should not be filled since they are redundant with grid/dim1 and dim2.<br>2) inverse : Rhopolar_polar 2D polar coordinates (rho=dim1, theta=dim2) with magnetic axis as centre of grid; theta and values following the COCOS=11 convention; the polar angle is theta=atan2(z-zaxis,r-raxis)<br>11) inverse_psi_straight_field_line : Flux surface type with psi as radial label (dim1) and the straight-field line poloidal angle (mod(index,10)=1) (dim2); could be non-equidistant; magnetic axis as centre of grid; following the COCOS=11 convention<br>12) inverse_psi_equal_arc : Flux surface type with psi as radial label (dim1) and the equal arc poloidal angle (mod(index,10)=2) (dim2)<br>13) inverse_psi_polar : Flux surface type with psi as radial label (dim1) and the polar poloidal angle (mod(index,10)=3) (dim2); could be non-equidistant<br>14) inverse_psi_straight_field_line_fourier : Flux surface type with psi as radial label (dim1) and Fourier modes in the straight-field line poloidal angle (mod(index,10)=4) (dim2), could be non-equidistant; magnetic axis as centre of grid; following the COCOS=11 convention<br>15) inverse_psi_equal_arc_fourier : Flux surface type with psi as radial label (dim1) and Fourier modes in the equal arc poloidal angle (mod(index,10)=5) (dim2)<br>16) inverse_psi_polar_fourier : Flux surface type with psi as radial label (dim1) and Fourier modes in the polar poloidal angle (mod(index,10)=6) (dim2); could be non-equidistant<br>21) inverse_rhopolnorm_straight_field_line : Flux surface type with radial label sqrt[(psi-psi_axis)/(psi_edge-psi_axis)] (dim1) and the straight-field line poloidal angle (dim2)<br>22) inverse_rhopolnorm_equal_arc : Flux surface type with radial label sqrt[(psi-psi_axis)/(psi_edge-psi_axis)] (dim1) and the equal arc poloidal angle (dim2)<br>23) inverse_rhopolnorm_polar : Flux surface type with radial label sqrt[(psi-psi_axis)/(psi_edge-psi_axis)] (dim1) and the polar poloidal angle (dim2)<br>24) inverse_rhopolnorm_straight_field_line_fourier : Flux surface type with radial label sqrt[(psi-psi_axis)/(psi_edge-psi_axis)] (dim1) and Fourier modes in the straight-field line poloidal angle (dim2)<br>25) inverse_rhopolnorm_equal_arc_fourier : Flux surface type with radial label sqrt[(psi-psi_axis)/(psi_edge-psi_axis)] (dim1) and Fourier modes in the equal arc poloidal angle (dim2)<br>26) inverse_rhopolnorm_polar_fourier : Flux surface type with radial label sqrt[(psi-psi_axis)/(psi_edge-psi_axis)] (dim1) and Fourier modes in the polar poloidal angle (dim2)<br>31) inverse_rhotornorm_straight_field_line : Flux surface type with radial label sqrt[Phi/Phi_edge] (dim1) and the straight-field line poloidal angle (dim2)<br>32) inverse_rhotornorm_equal_arc : Flux surface type with radial label sqrt[Phi/Phi_edge] (dim1) and the equal arc poloidal angle (dim2)<br>33) inverse_rhotornorm_polar : Flux surface type with radial label sqrt[Phi/Phi_edge] (dim1) and the polar poloidal angle (dim2)<br>34) inverse_rhotornorm_straight_field_line_fourier : Flux surface type with radial label sqrt[Phi/Phi_edge] (dim1) and Fourier modes in the straight-field line poloidal angle (dim2)<br>35) inverse_rhotornorm_equal_arc_fourier : Flux surface type with radial label sqrt[Phi/Phi_edge] (dim1) and Fourier modes in the equal arc poloidal angle (dim2)<br>36) inverse_rhotornorm_polar_fourier : Flux surface type with radial label sqrt[Phi/Phi_edge] (dim1) and Fourier modes in the polar poloidal angle (dim2)<br>41) inverse_rhopol_straight_field_line : Flux surface type with radial label sqrt[psi-psi_axis] (dim1) and the straight-field line poloidal angle (dim2)<br>42) inverse_rhopol_equal_arc : Flux surface type with radial label sqrt[psi-psi_axis] (dim1) and the equal arc poloidal angle (dim2)<br>43) inverse_rhopol_polar : Flux surface type with radial label sqrt[psi-psi_axis] (dim1) and the polar poloidal angle (dim2)<br>44) inverse_rhopol_straight_field_line_fourier : Flux surface type with radial label sqrt[psi-psi_axis] (dim1) and Fourier modes in the straight-field line poloidal angle (dim2)<br>45) inverse_rhopol_equal_arc_fourier : Flux surface type with radial label sqrt[psi-psi_axis] (dim1) and Fourier modes in the equal arc poloidal angle (dim2)<br>46) inverse_rhopol_polar_fourier : Flux surface type with radial label sqrt[psi-psi_axis] (dim1) and Fourier modes in the polar poloidal angle (dim2)<br>51) inverse_rhotor_straight_field_line : Flux surface type with radial label sqrt[Phi/pi/B0] (dim1), Phi being toroidal flux, and the straight-field line poloidal angle (dim2)<br>52) inverse_rhotor_equal_arc : Flux surface type with radial label sqrt[Phi/pi/B0] (dim1), Phi being toroidal flux, and the equal arc poloidal angle (dim2)<br>53) inverse_rhotor_polar : Flux surface type with radial label sqrt[Phi/pi/B0] (dim1), Phi being toroidal flux, and the polar poloidal angle (dim2)<br>54) inverse_rhotor_straight_field_line_fourier : Flux surface type with radial label sqrt[Phi/pi/B0] (dim1), Phi being toroidal flux, and Fourier modes in the straight-field line poloidal angle (dim2)<br>55) inverse_rhotor_equal_arc_fourier : Flux surface type with radial label sqrt[Phi/pi/B0] (dim1), Phi being toroidal flux, and Fourier modes in the equal arc poloidal angle (dim2)<br>56) inverse_rhotor_polar_fourier : Flux surface type with radial label sqrt[Phi/pi/B0] (dim1), Phi being toroidal flux, and Fourier modes in the polar poloidal angle (dim2)<br>91) irregular_rz_na : Irregular grid, thus give list of vertices in dim1(1:ndim1), dim2(1:ndim1) and then all fields are on values(1:ndim1,1)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].grid_type.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].grid_type.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].grid_type.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].j_parallel</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Defined as (j.B)/B0 where j and B are the current density and magnetic field vectors and B0 is the (signed) vacuum toroidal magnetic field strength at the geometric reference point (R0,Z0). It is formally not the component of the plasma current density parallel to the magnetic field</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].j_tor</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Toroidal plasma current density</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].phi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>Wb</p></td><td><p>Toroidal flux</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].psi</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>Wb</p></td><td><p>Values of the poloidal flux at the grid in the poloidal plane</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].r</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Values of the major radius on the grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].theta</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Values of the poloidal angle on the grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].type</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of profiles (distinguishes contribution from plasma, vaccum fields and total fields)<br>0) total : Total fields<br>1) vacuum : Vacuum fields (without contribution from plasma)<br>2) pf_active : Contribution from active coils only to the fields (pf_active IDS)<br>3) pf_passive : Contribution from passive elements only to the fields (pf_passive IDS)<br>4) plasma : Plasma contribution to the fields</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].type.description</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].type.index</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].type.name</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.time_slice[:].profiles_2d[:].z</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time_slice[:].profiles_2d[:].grid.dim1,<br> equilibrium.time_slice[:].profiles_2d[:].grid.dim2]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Values of the Height on the grid</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>equilibrium.time_slice[:].time</strong></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.vacuum_toroidal_field</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.vacuum_toroidal_field.b0</p></td><td style="word-wrap:break-word;word-break:break-all"><p>[equilibrium.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewing from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>equilibrium.vacuum_toroidal_field.r0</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane)</p></td></tr>
   </table>
   </table><p></p>
