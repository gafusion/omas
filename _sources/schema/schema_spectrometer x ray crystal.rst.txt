
spectrometer x ray crystal
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>X-crystal spectrometer diagnostic</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Measurement channel, composed of a camera, a crystal, and (optional) a set of reflectors. The light coming from the plasma passes through the (optional) set of reflectors, then the crystal and arrives at the camera</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Collimating aperture</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>If geometry_type=2, coordinates of the centre of the circle. If geometry_type=1 or 3, coordinates of the origin of the local coordinate system (X1,X2,X3) describing the plane detector/aperture. This origin is located within the detector/aperture area.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Type of geometry used to describe the surface of the detector or aperture (1:'outline', 2:'circular', 3:'rectangle'). In case of 'outline', the surface is described by an outline of point in a local coordinate system defined by a centre and three unit vectors X1, X2, X3. Note that there is some flexibility here and the data provider should choose the most convenient coordinate system for the object, respecting the definitions of (X1,X2,X3) indicated below. In case of 'circular', the surface is a circle defined by its centre, radius, and normal vector oriented towards the plasma X3.  In case of 'rectangle', the surface is a rectangle defined by its centre, widths in the X1 and X2 directions, and normal vector oriented towards the plasma X3.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Irregular outline of the detector/aperture in the (X1, X2) coordinate system. Do NOT repeat the first point.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].aperture.outline.x1</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x1 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.outline.x2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].aperture.outline.x1]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x2 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.radius</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of the circle, used only if geometry_type = 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface of the detector/aperture, derived from the above geometric data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is more horizontal than X2 (has a smaller abs(Z) component) and oriented in the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x1_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the aperture in the X1 direction, used only if geometry_type = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x2_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the aperture in the X2 direction, used only if geometry_type = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the detector/aperture plane and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].aperture.x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].bin</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of bins (binning in the vertical dimension) defined to increase the signal to noise ratio of the spectra</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Instrument function for this bin (replaces the ../../instrument function in case vertical binning is used), i.e. response of the detector to a monochromatic emission passing through the spectrometer. The resulting image on the detector will be a 2-D distribution of pixel values, for each wavelength. It can be given as explicit values for each detector pixel (values node) or as a parametric function of wavelength (described by the other nodes) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.wavelengths]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Centre (in terms of absolute wavelength) of instrument function</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.intensity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.wavelengths]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Scaling factor for the instrument function such that convolving the instrument function with an emission spectrum gives the counts per second on the detector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.scale</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.wavelengths]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Scale of Lorentzian instrument function (full width at half height)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.sigma</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.wavelengths]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Standard deviation of Gaussian instrument function</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Instrument function type<br>1) explicit : Explicit values, use the values node<br>2) gaussian : Gaussian : use parameters intensity, centre, and sigma<br>3) lorentzian : Lorentzian : use parameters intensity, centre, and scale<br>4) voigt : Voigt : use parameters intensity, centre, sigma, and scale</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.values</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.wavelengths]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>sr.m</p></td><td><p>Explicit instrument function values for the detector. When multiplied by the line-integrated emission spectrum in photons/second/sr/m/m^2 received on a binned pixel of the detector, gives the detector pixel output in counts/seconds.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].bin[:].instrument_function.wavelengths</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Array of wavelengths on which the instrument function is defined</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Description of the line of sight from the crystal to the plasma for this bin, defined by two points</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.first_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position of the first point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.first_point.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.first_point.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.first_point.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.second_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position of the second point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.second_point.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.second_point.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].line_of_sight.second_point.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].wavelength</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Wavelength of incoming photons on each horizontal pixel of this bin.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].bin[:].z_pixel_range</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Vertical pixel index range indicating the corresponding binned detector area</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Characteristics of the camera used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.camera_dimensions</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Total camera dimension in each direction (x1, x2)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position of the camera centre</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the camera</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Description of the line of sight for each pixel, given by 2 points. For each coordinate : first dimension : line index (x1 axis); second dimension: column index (x2 axis).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.first_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position of the first point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.first_point.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.first_point.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.first_point.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.second_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position of the second point</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.second_point.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.second_point.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.line_of_sight.second_point.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.pixel_dimensions</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Pixel dimension in each direction (x1, x2)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.pixel_position</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Position of the centre of each pixel. First dimension : line index (x1 axis). Second dimension: column index (x2 axis).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.pixel_position.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.pixel_position.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.pixel_position.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.pixels_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Number of pixels in each direction (x1, x2)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is more horizontal than X2 (has a smaller abs(Z) component) and oriented in the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the camera plane and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].camera.x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Characteristics of the crystal used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.angle_bragg</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Bragg angle of the crystal</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Coordinates of the origin of the local coordinate system (X1,X2,X3) describing the object. This origin is located within the object area and should be the middle point of the object surface. If geometry_type=2, it's the centre of the circular object. If geometry_type=3, it's the centre of the rectangular object. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.curvature_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Curvature of the object.<br>1) planar : Planar object, no curvature<br>2) cylindrical_x1 : Cylindrical in the X1 direction, use x1_curvature<br>3) cylindrical_x2 : Cylindrical in the X2 direction, use x2_curvature<br>4) spherical : Spherical : same curvature radius in X1 and X2 directions, indicated in x1_curvature<br>5) toroidal : Toroidal : x1_curvature in X1 direction and x2_curvature in X2 direction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.curvature_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.curvature_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.curvature_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.cut</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Miller indices characterizing the cut of the crystal (can be of length 3 or 4)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Geometry of the object contour. Note that there is some flexibility in the choice of the local coordinate system (X1,X2,X3). The data provider should choose the most convenient coordinate system for the object, respecting the definitions of (X1,X2,X3) indicated below.<br>1) polygonal : Contour described by a polygonal outline in the (X1, X2) plane<br>2) circular : Circle in the (X1, X2) plane, defined by its centre and radius<br>3) rectangle : Rectangle in the (X1, X2) plane, defined by its centre and widths in the X1 and X2 directions</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.geometry_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.geometry_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.geometry_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.material</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Material of the object<br>0) unspecified : unspecified<br>1) C : Carbon<br>2) W : Tungsten<br>3) C_W_coating : Carbon with tungsten coating<br>4) SS : Stainless steel<br>5) SS_C_coating : Stainless steel with carbon coating<br>6) IN : Inconel<br>7) IN_C_coating : Inconel with carbon coating<br>8) BC : Boron carbide<br>17) BN : Boron nitride<br>9) Ti_C_coating : Titanium with carbon coating<br>10) Be : Beryllium<br>11) Mo : Molybdenum<br>12) Quartz : Quartz<br>13) Ge : Germanium<br>14) Si : Silicon<br>15) LiF : Lithium fluoride<br>16) InSb : Indium antimonide<br>18) Cu : Copper<br>19) CuCrZr : Copper Chromium Zirconium alloy<br>20) U_235 : Uranium 235 isotope<br>21) U_238 : Uranium 238 isotope<br>22) Diamond : Diamond<br>23) CxHy : Organic molecule<br>24) LaCl3 : Lanthanum chloride<br>25) LaBr : Lanthanum bromide<br>26) HPGe : High Purity Germanium<br>27) CeBr : Cesium bromide<br>28) CZT : Cadmium zinc telluride<br>29) In_115 : Indium 115 isotope<br>30) He_4 : Helium 4 isotope</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.material.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.material.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.material.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.mesh_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Crystal mesh type<br>1) hexagonal : Hexagonal mesh<br>2) cubic : Cubic mesh</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.mesh_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.mesh_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.mesh_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Irregular outline of the object in the (X1, X2) coordinate system, used only if geometry_type/index=1. Do NOT repeat the first point.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].crystal.outline.x1</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x1 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.outline.x2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].crystal.outline.x1]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x2 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.radius</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of the circle, used only if geometry_type/index = 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface of the object, derived from the above geometric data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.thickness</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Thickness of the crystal</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.wavelength_bragg</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Bragg wavelength of the crystal</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x1_curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of curvature in the X1 direction, to be filled only for curvature_type/index = 2, 4 or 5</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is more horizontal than X2 (has a smaller abs(Z) component) and oriented in the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x1_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the object in the X1 direction, used only if geometry_type/index = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x2_curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of curvature in the X2 direction, to be filled only for curvature_type/index = 3 or 5</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x2_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the object in the X2 direction, used only if geometry_type/index = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the object surface and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].crystal.x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].detection_efficiency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].energies]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Probability of detection of a photon impacting the detector as a function of its energy </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].energies</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Array of energy values for tabulation of the detection efficiency</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].energy_bound_lower</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].z_frames]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>eV</p></td><td><p>Lower energy bound for the photon detection, for each pixel (horizontal, vertical)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].energy_bound_upper</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].z_frames]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>eV</p></td><td><p>Upper energy bound for the photon detection, for each pixel (horizontal, vertical)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].exposure_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Exposure time of the measurement</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of filter windows</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Coordinates of the origin of the local coordinate system (X1,X2,X3) describing the filter. This origin is located within the filter area and should be the middle point of the filter surface. If geometry_type=2, it's the centre of the circular filter. If geometry_type=3, it's the centre of the rectangular filter. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].curvature_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Curvature of the filter.<br>1) planar : Planar object, no curvature<br>2) cylindrical_x1 : Cylindrical in the X1 direction, use x1_curvature<br>3) cylindrical_x2 : Cylindrical in the X2 direction, use x2_curvature<br>4) spherical : Spherical : same curvature radius in X1 and X2 directions, indicated in x1_curvature<br>5) toroidal : Toroidal : x1_curvature in X1 direction and x2_curvature in X2 direction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].curvature_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].curvature_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].curvature_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Geometry of the filter contour. Note that there is some flexibility in the choice of the local coordinate system (X1,X2,X3). The data provider should choose the most convenient coordinate system for the filter, respecting the definitions of (X1,X2,X3) indicated below.<br>1) polygonal : Contour described by a polygonal outline in the (X1, X2) plane<br>2) circular : Circle in the (X1, X2) plane, defined by its centre and radius<br>3) rectangle : Rectangle in the (X1, X2) plane, defined by its centre and widths in the X1 and X2 directions</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].geometry_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].geometry_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].geometry_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the filter</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].material</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Material of the filter window<br>0) unspecified : unspecified<br>1) C : Carbon<br>2) W : Tungsten<br>3) C_W_coating : Carbon with tungsten coating<br>4) SS : Stainless steel<br>5) SS_C_coating : Stainless steel with carbon coating<br>6) IN : Inconel<br>7) IN_C_coating : Inconel with carbon coating<br>8) BC : Boron carbide<br>17) BN : Boron nitride<br>9) Ti_C_coating : Titanium with carbon coating<br>10) Be : Beryllium<br>11) Mo : Molybdenum<br>12) Quartz : Quartz<br>13) Ge : Germanium<br>14) Si : Silicon<br>15) LiF : Lithium fluoride<br>16) InSb : Indium antimonide<br>18) Cu : Copper<br>19) CuCrZr : Copper Chromium Zirconium alloy<br>20) U_235 : Uranium 235 isotope<br>21) U_238 : Uranium 238 isotope<br>22) Diamond : Diamond<br>23) CxHy : Organic molecule<br>24) LaCl3 : Lanthanum chloride<br>25) LaBr : Lanthanum bromide<br>26) HPGe : High Purity Germanium<br>27) CeBr : Cesium bromide<br>28) CZT : Cadmium zinc telluride<br>29) In_115 : Indium 115 isotope<br>30) He_4 : Helium 4 isotope</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].material.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].material.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].material.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Irregular outline of the filter in the (X1, X2) coordinate system, used only if geometry_type/index=1. Do NOT repeat the first point.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].filter_window[:].outline.x1</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x1 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].outline.x2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].filter_window[:].outline.x1]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x2 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].photon_absorption</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].filter_window[:].wavelengths]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Probability of absorbing a photon passing through the filter as a function of its wavelength </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].radius</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of the circle, used only if geometry_type/index = 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface of the filter, derived from the above geometric data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].thickness</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Thickness of the filter window</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].wavelength_lower</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Lower bound of the filter wavelength range</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].wavelength_upper</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Upper bound of the filter wavelength range</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].filter_window[:].wavelengths</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Array of wavelength values</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x1_curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of curvature in the X1 direction, to be filled only for curvature_type/index = 2, 4 or 5</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is more horizontal than X2 (has a smaller abs(Z) component) and oriented in the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x1_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the filter in the X1 direction, used only if geometry_type/index = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x2_curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of curvature in the X2 direction, to be filled only for curvature_type/index = 3 or 5</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x2_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the filter in the X2 direction, used only if geometry_type/index = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the filter surface and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].filter_window[:].x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].frame</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].frame[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of frames</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].frame[:].counts_bin_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].bin]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Number of counts detected on each pixel/bin of the binned frame during one exposure time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].frame[:].counts_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].z_frames]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Number of counts detected on each pixel of the frame during one exposure time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].frame[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Instrument function (to be used in case vertical binning is not used), i.e. response of the detector to a monochromatic emission passing through the spectrometer. The resulting image on the detector will be a 2-D distribution of pixel values, for each wavelength. It can be given as explicit values for each detector pixel (values node) or as a parametric function of wavelength (described by the other nodes) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].z_frames,<br> spectrometer_x_ray_crystal.channel[:].instrument_function.wavelengths]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Centre (in terms of absolute wavelength) of instrument function</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.intensity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].z_frames,<br> spectrometer_x_ray_crystal.channel[:].instrument_function.wavelengths]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Scaling factor for the instrument function such that convolving the instrument function with an emission spectrum gives the counts per second on the detector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.scale</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].z_frames,<br> spectrometer_x_ray_crystal.channel[:].instrument_function.wavelengths]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Scale of Lorentzian instrument function (full width at half height)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.sigma</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].z_frames,<br> spectrometer_x_ray_crystal.channel[:].instrument_function.wavelengths]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Standard deviation of Gaussian instrument function</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Instrument function type<br>1) explicit : Explicit values, use the values node<br>2) gaussian : Gaussian : use parameters intensity, centre, and sigma<br>3) lorentzian : Lorentzian : use parameters intensity, centre, and scale<br>4) voigt : Voigt : use parameters intensity, centre, sigma, and scale</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].instrument_function.values</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].z_frames,<br> spectrometer_x_ray_crystal.channel[:].instrument_function.wavelengths]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>sr.m</p></td><td><p>Explicit instrument function values for the detector. When multiplied by the line-integrated emission spectrum in photons/second/sr/m/m^2 received on a pixel of the detector, gives the detector pixel output in counts/seconds.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].instrument_function.wavelengths</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Array of wavelengths on which the instrument function is defined</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Profiles proxies are given in the vertical direction of the detector. They are estimated directly from the camera, without tomographic inversion. Binning is allowed so the number of profile points may be lower than the length of z_frames. Physical quantities deduced from the measured spectra are given for each profile point. They correspond to the spectra integrated along lines of sight, defined by a first point given by the centre of the crystal and a second point (depending on the profile point) described below.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_rho_tor_norm</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r]</p></td><td><p>STRUCTURE</p></td><td><p>-</p></td><td><p>Shortest distance in rho_tor_norm between lines of sight and magnetic axis, signed with following convention : positive (resp. negative) means the point of shortest distance is above (resp. below) the magnetic axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_rho_tor_norm.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_rho_tor_norm.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_rho_tor_norm.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>For each profile point, a line of sight is defined by a first point given by the centre of the crystal and a second point described here. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_e</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r]</p></td><td><p>STRUCTURE</p></td><td><p>eV</p></td><td><p>Electron temperature (estimated from a spectral fit directly on the output line-integrated signal, without tomographic inversion)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_e.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>eV</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_e.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_e.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_i</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r]</p></td><td><p>STRUCTURE</p></td><td><p>eV</p></td><td><p>Ion temperature (estimated from a spectral fit directly on the output line-integrated signal, without tomographic inversion)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_i.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>eV</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_i.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.t_i.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Timebase for the dynamic nodes of this probe located at this level of the IDS structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.velocity_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.lines_of_sight_second_point.r]</p></td><td><p>STRUCTURE</p></td><td><p>m.s^-1</p></td><td><p>Toroidal velocity (estimated from a spectral fit directly on the output line-integrated signal, without tomographic inversion)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.velocity_tor.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m.s^-1</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.velocity_tor.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.velocity_tor.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].profiles_line_integrated.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of reflectors (optional) reflecting the light coming from the plasma towards the crystal. If empty, means that the plasma light directly arrives on the crystal.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].centre</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Coordinates of the origin of the local coordinate system (X1,X2,X3) describing the object. This origin is located within the object area and should be the middle point of the object surface. If geometry_type=2, it's the centre of the circular object. If geometry_type=3, it's the centre of the rectangular object. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].centre.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].centre.r</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].centre.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].curvature_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Curvature of the object.<br>1) planar : Planar object, no curvature<br>2) cylindrical_x1 : Cylindrical in the X1 direction, use x1_curvature<br>3) cylindrical_x2 : Cylindrical in the X2 direction, use x2_curvature<br>4) spherical : Spherical : same curvature radius in X1 and X2 directions, indicated in x1_curvature<br>5) toroidal : Toroidal : x1_curvature in X1 direction and x2_curvature in X2 direction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].curvature_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].curvature_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].curvature_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Geometry of the object contour. Note that there is some flexibility in the choice of the local coordinate system (X1,X2,X3). The data provider should choose the most convenient coordinate system for the object, respecting the definitions of (X1,X2,X3) indicated below.<br>1) polygonal : Contour described by a polygonal outline in the (X1, X2) plane<br>2) circular : Circle in the (X1, X2) plane, defined by its centre and radius<br>3) rectangle : Rectangle in the (X1, X2) plane, defined by its centre and widths in the X1 and X2 directions</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].geometry_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].geometry_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].geometry_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].material</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Material of the object<br>0) unspecified : unspecified<br>1) C : Carbon<br>2) W : Tungsten<br>3) C_W_coating : Carbon with tungsten coating<br>4) SS : Stainless steel<br>5) SS_C_coating : Stainless steel with carbon coating<br>6) IN : Inconel<br>7) IN_C_coating : Inconel with carbon coating<br>8) BC : Boron carbide<br>17) BN : Boron nitride<br>9) Ti_C_coating : Titanium with carbon coating<br>10) Be : Beryllium<br>11) Mo : Molybdenum<br>12) Quartz : Quartz<br>13) Ge : Germanium<br>14) Si : Silicon<br>15) LiF : Lithium fluoride<br>16) InSb : Indium antimonide<br>18) Cu : Copper<br>19) CuCrZr : Copper Chromium Zirconium alloy<br>20) U_235 : Uranium 235 isotope<br>21) U_238 : Uranium 238 isotope<br>22) Diamond : Diamond<br>23) CxHy : Organic molecule<br>24) LaCl3 : Lanthanum chloride<br>25) LaBr : Lanthanum bromide<br>26) HPGe : High Purity Germanium<br>27) CeBr : Cesium bromide<br>28) CZT : Cadmium zinc telluride<br>29) In_115 : Indium 115 isotope<br>30) He_4 : Helium 4 isotope</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].material.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].material.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].material.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Irregular outline of the object in the (X1, X2) coordinate system, used only if geometry_type/index=1. Do NOT repeat the first point.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].reflector[:].outline.x1</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x1 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].outline.x2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.channel[:].reflector[:].outline.x1]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Positions along x2 axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].radius</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of the circle, used only if geometry_type/index = 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].surface</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>Surface of the object, derived from the above geometric data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x1_curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of curvature in the X1 direction, to be filled only for curvature_type/index = 2, 4 or 5</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x1_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X1 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X1 vector is more horizontal than X2 (has a smaller abs(Z) component) and oriented in the positive phi direction (counter-clockwise when viewing from above). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x1_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x1_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x1_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x1_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the object in the X1 direction, used only if geometry_type/index = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x2_curvature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Radius of curvature in the X2 direction, to be filled only for curvature_type/index = 3 or 5</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x2_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X2 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X2 axis is orthonormal so that uX2 = uX3 x uX1.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x2_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x2_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x2_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x2_width</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Full width of the object in the X2 direction, used only if geometry_type/index = 3</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x3_unit_vector</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Components of the X3 direction unit vector in the (X,Y,Z) coordinate system, where X is the major radius axis for phi = 0, Y is the major radius axis for phi = pi/2, and Z is the height axis. The X3 axis is normal to the object surface and oriented towards the plasma.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x3_unit_vector.x</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along X axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x3_unit_vector.y</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Y axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].reflector[:].x3_unit_vector.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Component along Z axis</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.channel[:].wavelength_frames</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> spectrometer_x_ray_crystal.channel[:].z_frames]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Wavelength of incoming photons on each pixel of the frames, mainly varying accross the horizontal dimension of the frame. However a 2D map of the wavelength is given since it is not constant vertically due to the elliptical curvature of the photon iso-surfaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.channel[:].z_frames</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height of the observed zone at the focal plane in the plasma, corresponding to the vertical dimension of the frame</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of external libraries used by the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.library[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[spectrometer_x_ray_crystal.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>User-defined name for this IDS occurrence</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.occurrence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p></p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.occurrence_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of data contained in this occurrence<br>1) reconstruction : Equilibrium reconstruction<br>2) prediction_fixed : Equilibrium prediction, fixed boundary<br>3) prediction_free : Equilibrium prediction, free boundary<br>4) mapping : Used for mapping equilibrium results from one grid type / resolution to another, or for including variables not present in the first set such as the calculation of magnetic field of other derived parameters</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.occurrence_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.occurrence_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.occurrence_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Information about the plugins used to write/read this IDS. This structure is filled automatically by the Access Layer at GET/PUT time, no need to fill it via a user program.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_get</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to GET the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_get.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_get.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_get.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_get.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_get.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to PUT the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_put.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_put.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_put.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_put.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.infrastructure_put.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which a plugin has been applied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins actually used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application). This information is filled by the plugin infrastructure during the GET operation.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].get_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the plugin applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins used to PUT a node (potentially, multiple plugins can be applied, if so they are listed by order of application)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].put_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins to be used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.plugins.node[:].readback[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.provenance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Provenance information about this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.provenance.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which the provenance is given. The provenance information applies to the whole structure below the IDS node. For documenting provenance information for the whole IDS, set the size of this array of structure to 1 and leave the child "path" node empty</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.provenance.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the provenance information applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.provenance.node[:].sources</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>List of sources used to import or calculate this node, identified as explained below. In case the node is the result of of a calculation / data processing, the source is an input to the process described in the "code" structure at the root of the IDS. The source can be an IDS (identified by a URI or a persitent identifier, see syntax in the link below) or non-IDS data imported directly from an non-IMAS database (identified by the command used to import the source, or the persistent identifier of the data source). Often data are obtained by a chain of processes, however only the last process input are recorded here. The full chain of provenance has then to be reconstructed recursively from the provenance information contained in the data sources.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.source</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...). Superseeded by the new provenance structure.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>spectrometer_x_ray_crystal.latency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Upper bound of the delay between physical information received by the detector and data available on the real-time (RT) network.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>spectrometer_x_ray_crystal.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   </table>
   </table><p></p>
