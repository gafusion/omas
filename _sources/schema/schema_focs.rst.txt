
focs
^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Fiber Optic Current Sensor (FOCS)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.b_field_z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.outline.r]</p></td><td><p>STRUCTURE</p></td><td><p>T</p></td><td><p>Vertical component of the magnetic field on each point of the FOCS outline</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.b_field_z.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> focs.b_field_z.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>focs.b_field_z.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.b_field_z.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.b_field_z.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.b_field_z.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of external libraries used by the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.library[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.current</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>A</p></td><td><p>Total toroidal current flowing through the area outlined by the FOCS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.current.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.current.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>focs.current.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.current.validity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for the whole acquisition period. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.current.validity_timed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.current.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Indicator of the validity of the data for each time slice. 0: valid from automated processing, 1: valid and certified by the diagnostic RO; - 1 means problem identified in the data processing (request verification by the diagnostic RO), -2: invalid data, should not be used (values lower than -2 have a code-specific meaning detailing the origin of their invalidity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_length</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Spun fibre length on the vacuum vessel</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Intrinsic properties of the fibre installed on the vacuum vessel</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties.beat_length</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Linear beat length</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties.id</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the fibre, e.g. commercial reference</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties.spun</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Spun period</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties.spun_initial_azimuth</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad</p></td><td><p>Spun fibre initial azimuth</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties.twist</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m</p></td><td><p>Twist period</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.fibre_properties.verdet_constant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>rad.T^-1.m^-1</p></td><td><p>Verdet constant</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.id</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>ID of the FOCS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>User-defined name for this IDS occurrence</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.occurrence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p></p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.occurrence_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of data contained in this occurrence<br>1) reconstruction : Equilibrium reconstruction<br>2) prediction_fixed : Equilibrium prediction, fixed boundary<br>3) prediction_free : Equilibrium prediction, free boundary<br>4) mapping : Used for mapping equilibrium results from one grid type / resolution to another, or for including variables not present in the first set such as the calculation of magnetic field of other derived parameters</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.occurrence_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.occurrence_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.occurrence_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Information about the plugins used to write/read this IDS. This structure is filled automatically by the Access Layer at GET/PUT time, no need to fill it via a user program.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_get</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to GET the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_get.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_get.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_get.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_get.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_get.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to PUT the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_put.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_put.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_put.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_put.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.infrastructure_put.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which a plugin has been applied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins actually used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application). This information is filled by the plugin infrastructure during the GET operation.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].get_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the plugin applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins used to PUT a node (potentially, multiple plugins can be applied, if so they are listed by order of application)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].put_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins to be used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.plugins.node[:].readback[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.provenance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Provenance information about this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.provenance.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which the provenance is given. The provenance information applies to the whole structure below the IDS node. For documenting provenance information for the whole IDS, set the size of this array of structure to 1 and leave the child "path" node empty</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.provenance.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the provenance information applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.provenance.node[:].sources</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>List of sources used to import or calculate this node, identified as explained below. In case the node is the result of of a calculation / data processing, the source is an input to the process described in the "code" structure at the root of the IDS. The source can be an IDS (identified by a URI or a persitent identifier, see syntax in the link below) or non-IDS data imported directly from an non-IMAS database (identified by the command used to import the source, or the persistent identifier of the data source). Often data are obtained by a chain of processes, however only the last process input are recorded here. The full chain of provenance has then to be reconstructed recursively from the provenance information contained in the data sources.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.source</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...). Superseeded by the new provenance structure.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.latency</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>s</p></td><td><p>Upper bound of the delay between physical information received by the detector and data available on the real-time (RT) network.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the FOCS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>FOCS outline</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.outline.phi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>rad</p></td><td><p>Toroidal angle (oriented counter-clockwise when viewing from above)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>focs.outline.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.outline.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_initial</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Initial Stokes vector at the entrance of the FOCS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_initial.s0</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S0 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_initial.s1</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S1 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_initial.s2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S2 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_initial.s3</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S3 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_output</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[focs.stokes_output[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Stokes vector at the output of the FOCS as a function of time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_output[:].s0</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S0 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_output[:].s1</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S1 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_output[:].s2</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S2 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>focs.stokes_output[:].s3</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>-</p></td><td><p>S3 component of the unit Stokes vector</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>focs.stokes_output[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>focs.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   </table>
   </table><p></p>
