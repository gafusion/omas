
wall
^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th style="width:25%">Path</th><th style="width:25%">Dimensions</th><th>Type</th><th>Units</th><th>Description</th></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p></p></td><td><p></p></td><td><p>Description of the torus wall and its interaction with the plasma</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Generic decription of the code-specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of external libraries used by the code that has produced this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.library[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software generating IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.output_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.code.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of 2D wall descriptions, for each type of possible physics or engineering configurations necessary (gas tight vs wall with ports and holes, coarse vs fine representation, single contour limiter, disjoint gapped plasma facing components, ...). A simplified description of the toroidal extension of the 2D contours is also provided by using the phi_extensions nodes.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Description of the immobile limiting surface(s) or plasma facing components for defining the Last Closed Flux Surface.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of the limiter description. index = 0 for the official single contour limiter and 1 for the official disjoint PFC structure like first wall. Additional representations needed on a code-by-code basis follow same incremental pair tagging starting on index =2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of limiter units. Multiple units must be ordered so that they define contiguous sections, clockwise in the poloidal direction. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].closed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Flag identifying whether the contour is closed (1) or open (0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].component_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of component of this unit<br>0) other : Other type of component not in the list yet<br>1) port : Port<br>2) divertor : Divertor<br>3) baffle : Baffle<br>4) blanket : Blanket for Tritium generation<br>5) limiter : Limiter<br>6) panel : First wall panel<br>7) antenna : Plasma facing element of an RF antenna</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].component_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].component_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].component_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Identifier of this unit. Although the details may be machine-specific, a tree-like syntax must be followed, listing first top level components, then going down to finer element description. The tree levels are separated by a /, using a number of levels relevant to the granularity of the description. Example : ic_antenna/a1/bumpers refers to the bumpers of the a1 IC antenna</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the limiter unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Irregular outline of the limiting surface. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].limiter.unit[:].outline.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].outline.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].limiter.unit[:].outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].phi_extensions</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Simplified description of toroidal angle extensions of the unit, by a list of zones defined by their centre and full width (in toroidal angle).  In each of these zones, the unit outline remains the same. Leave this node empty for an axisymmetric unit. The first dimension gives the centre and full width toroidal angle values for the unit. The second dimension represents the toroidal occurrences of the unit countour (i.e. the number of toroidal zones).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].limiter.unit[:].resistivity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>ohm.m</p></td><td><p>Resistivity of the limiter unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>In case of mobile plasma facing components, use the time-dependent description below this node to provide the full outline of the closest PFC surfaces to the plasma. Even in such a case, the 'limiter' structure is still used to provide the outermost limiting surface (can be used e.g. to define the boundary of the mesh of equilibrium reconstruction codes)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of the description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of mobile units</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit[:].closed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Flag identifying whether the contour is closed (1) or open (0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the mobile unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit[:].outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].mobile.unit[:].outline[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Irregular outline of the mobile unit, for a set of time slices. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].mobile.unit[:].outline[:].r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].mobile.unit[:].outline[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit[:].outline[:].z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].mobile.unit[:].outline[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit[:].phi_extensions</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...2,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>rad</p></td><td><p>Simplified description of toroidal angle extensions of the unit, by a list of zones defined by their centre and full width (in toroidal angle).  In each of these zones, the unit outline remains the same. Leave this node empty for an axisymmetric unit. The first dimension gives the centre and full width toroidal angle values for the unit. The second dimension represents the toroidal occurrences of the unit countour (i.e. the number of toroidal zones).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].mobile.unit[:].resistivity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>ohm.m</p></td><td><p>Resistivity of the mobile unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of the description<br>0) single_unit_vessel : Limiter structure is using a single unit, the vessel structure is filled<br>1) multiple_units_no_vessel : Limiter is described with multiple units, no vessel description<br>2) multiple_units_vessel : Limiter is described with multiple units and the vessel structure is filled</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Mechanical structure of the vacuum vessel. The vessel is described as a set of nested layers with given physics properties; Two representations are admitted for each vessel unit : annular (two contours) or block elements.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of the description. index = 0 for the official single/multiple annular representation and 1 for the official block element representation for each unit. Additional representations needed on a code-by-code basis follow same incremental pair tagging starting on index=2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of units</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Annular representation of a layer by two contours, inner and outer. Alternatively, the layer can be described by a centreline and thickness. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.centreline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Centreline, i.e. middle of the vessel layer as a series of point. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.centreline.closed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Flag identifying whether the contour is closed (1) or open (0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].vessel.unit[:].annular.centreline.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.centreline.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].vessel.unit[:].annular.centreline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.outline_inner</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Inner vessel outline. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.outline_inner.closed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Flag identifying whether the contour is closed (1) or open (0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].vessel.unit[:].annular.outline_inner.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.outline_inner.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].vessel.unit[:].annular.outline_inner.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.outline_outer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Outer vessel outline. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.outline_outer.closed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Flag identifying whether the contour is closed (1) or open (0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].vessel.unit[:].annular.outline_outer.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.outline_outer.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].vessel.unit[:].annular.outline_outer.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.resistivity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>ohm.m</p></td><td><p>Resistivity of the vessel unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].annular.thickness</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].vessel.unit[:].annular.centreline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Thickness of the vessel layer  in the perpendicular direction to the centreline. Thickness(i) is the thickness of the layer between centreline/r(i),z(i) and centreline/r(i+1),z(i+1)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of block elements</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].j_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>A</p></td><td><p>Toroidal current induced in this block element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].j_tor.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].vessel.unit[:].element[:].j_tor.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].vessel.unit[:].element[:].j_tor.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the block element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].outline</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Outline of the block element. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].outline.closed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Flag identifying whether the contour is closed (1) or open (0)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_2d[:].vessel.unit[:].element[:].outline.r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Major radius</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].outline.z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_2d[:].vessel.unit[:].element[:].outline.r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>Height</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].resistance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Ohm</p></td><td><p>Resistance of the block element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].element[:].resistivity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>ohm.m</p></td><td><p>Resistivity of the block element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Identifier of the unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_2d[:].vessel.unit[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the unit</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of 3D wall descriptions, described using the GGD, for each type of possible physics or engineering configurations necessary (gas tight vs wall with ports and holes, coarse vs fine representation, ...). </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].component[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Description of the components represented by various subsets, given for each slice of the grid_ggd time base (the component description is not supposed to change, but grid_ggd may evolve with time)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].component[:].identifiers</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Identifiers of the components (described in the various grid_subsets). Although the details may be machine-specific, a tree-like syntax must be followed, listing first top level components, then going down to finer element description. The tree levels are separated by a /, using a number of levels relevant to the granularity of the description. Example : ic_antenna/a1/bumpers refers to the bumpers of the a1 IC antenna</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].component[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].component[:].identifiers]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>The component type is given for various grid_subsets, using the identifier convention below<br>0) other : Other type of component not in the list yet<br>1) port : Port<br>2) divertor : Divertor<br>3) baffle : Baffle<br>4) blanket : Blanket for Tritium generation<br>5) limiter : Limiter<br>6) panel : First wall panel<br>7) antenna : Plasma facing element of an RF antenna</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Identifier value for the grid subset</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].component[:].type[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Wall physics quantities represented using the general grid description, for various time slices.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>T.m</p></td><td><p>Magnetic vector potential, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].a_field[:].r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T.m</p></td><td><p>Component along the major radius axis, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].r_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T.m</p></td><td><p>Interpolation coefficients for the component along the major radius axis, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].toroidal</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].a_field[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T.m</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].toroidal_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T.m</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].a_field[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>T.m</p></td><td><p>Component along the height axis, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].a_field[:].z_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>T.m</p></td><td><p>Interpolation coefficients for the component along the height axis, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>V.m^-1</p></td><td><p>Electric field, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].e_field[:].r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Component along the major radius axis, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].r_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Interpolation coefficients for the component along the major radius axis, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].toroidal</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].e_field[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].toroidal_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].e_field[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Component along the height axis, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].e_field[:].z_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>V.m^-1</p></td><td><p>Interpolation coefficients for the component along the height axis, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Energy fluxes. The incident and emitted components are distinguished. The net flux received by the wall is equal to incident - emitted</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Current energy fluxes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.current.emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.current.emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.current.incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.current.incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.current.incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Energy fluxes due to the kinetic energy of particles</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Electron fluxes. Fluxes are given at the wall, after the sheath.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.electrons.incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the various ion species, in the sense of isonuclear or isomolecular sequences. Ionisation states (and other types of states) must be differentiated at the state level below. Fluxes are given at the wall, after the sheath.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying ion (e.g. H, D, T, He, C, D2, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only the 'ion' level is considered and the 'state' array of structure is empty; 1-Ion states are considered and are described in the 'state' array of structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].neutral_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding neutral species in the ../../neutral array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].z_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Maximum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].state[:].z_min</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Minimum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.ion[:].z_ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Neutral species fluxes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].ion_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding ion species in the ../../ion array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying state</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].neutral_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].neutral_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].neutral_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].neutral_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.kinetic.neutral[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Total radiation, not split by process</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.radiation.emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.radiation.incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.radiation.incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Wall recombination </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the various ion species, in the sense of isonuclear or isomolecular sequences. Ionisation states (and other types of states) must be differentiated at the state level below</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying ion (e.g. H, D, T, He, C, D2, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only the 'ion' level is considered and the 'state' array of structure is empty; 1-Ion states are considered and are described in the 'state' array of structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].neutral_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding neutral species in the ../../neutral array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].z_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Maximum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].state[:].z_min</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Minimum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.ion[:].z_ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Neutral species fluxes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].ion_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding ion species in the ../../ion array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying state</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].neutral_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].neutral_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].neutral_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].neutral_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].energy_fluxes.recombination.neutral[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>A.m^-2</p></td><td><p>Total current density, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].j_total[:].r</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Component along the major radius axis, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].r_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Interpolation coefficients for the component along the major radius axis, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].toroidal</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].j_total[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].toroidal_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].z</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].j_total[:].r]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Component along the height axis, one scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].j_total[:].z_coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>A.m^-2</p></td><td><p>Interpolation coefficients for the component along the height axis, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Particle fluxes. The incident and emitted components are distinguished. The net flux received by the wall is equal to incident - emitted</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Electron fluxes </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.electrons.emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.electrons.incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.electrons.incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the various ion species, in the sense of isonuclear or isomolecular sequences. Ionisation states (and other types of states) must be differentiated at the state level below</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying ion (e.g. H, D, T, He, C, D2, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only the 'ion' level is considered and the 'state' array of structure is empty; 1-Ion states are considered and are described in the 'state' array of structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].neutral_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding neutral species in the ../../neutral array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].z_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Maximum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].state[:].z_min</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Minimum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.ion[:].z_ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Neutral species fluxes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].ion_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding ion species in the ../../ion array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].emitted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Emitted fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].emitted[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].emitted[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].emitted[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].emitted[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].emitted[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m^-2.s^-1</p></td><td><p>Incident fluxes for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].incident[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].incident[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].incident[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].incident[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].incident[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m^-2.s^-1</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying state</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].neutral_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].neutral_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].neutral_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].neutral_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].particle_fluxes.neutral[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].phi_potential</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>V</p></td><td><p>Electric potential, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].phi_potential[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].phi_potential[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>V</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].phi_potential[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].phi_potential[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].phi_potential[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].power_density</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>W.m^-2</p></td><td><p>Net power density arriving on the wall surface, for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].power_density[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].power_density[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].power_density[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].power_density[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].power_density[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].psi</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Wb</p></td><td><p>Poloidal flux, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].psi[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].psi[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>Wb</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].psi[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].psi[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].psi[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Wb</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Fraction of incoming particles that is reflected back to the vacuum chamber</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Recycling coefficients for the various ion species, in the sense of isonuclear or isomolecular sequences. Ionisation states (and other types of states) must be differentiated at the state level below</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>-</p></td><td><p>Recycling coefficient for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].coefficient[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].recycling.ion[:].coefficient[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].coefficient[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].coefficient[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].recycling.ion[:].coefficient[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying ion (e.g. H, D, T, He, C, D2, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only the 'ion' level is considered and the 'state' array of structure is empty; 1-Ion states are considered and are described in the 'state' array of structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].neutral_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding neutral species in the ../../neutral array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>-</p></td><td><p>Recycling coefficient for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].coefficient[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].coefficient[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].coefficient[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].coefficient[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].coefficient[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].z_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Maximum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].state[:].z_min</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Minimum Z of the charge state bundle</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.ion[:].z_ion</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Recycling coefficients for the various neutral species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>-</p></td><td><p>Recycling coefficient for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].coefficient[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].recycling.neutral[:].coefficient[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].coefficient[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].coefficient[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].recycling.neutral[:].coefficient[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].ion_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the corresponding ion species in the ../../ion array</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].multiple_states_flag</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Fluxes related to the different states of the species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>-</p></td><td><p>Recycling coefficient for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].coefficient[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].coefficient[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].coefficient[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].coefficient[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].coefficient[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].electron_configuration</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying state</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].neutral_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].neutral_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].neutral_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].neutral_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].vibrational_level</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Vibrational level (can be bundled)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].recycling.neutral[:].state[:].vibrational_mode</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].resistivity</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>Ohm.m</p></td><td><p>Resistivity, given on various grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].resistivity[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].resistivity[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>Ohm.m</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].resistivity[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].resistivity[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].resistivity[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>Ohm.m</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].temperature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>K</p></td><td><p>Temperature of the wall, for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].temperature[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].temperature[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>K</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].temperature[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].temperature[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].temperature[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].v_biasing</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>V</p></td><td><p>Electric potential applied to the wall element by outside means, for various wall components (grid subsets). Different from the plasma electric potential or the sheath potential drop.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].v_biasing[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].ggd[:].v_biasing[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>V</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].v_biasing[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].ggd[:].v_biasing[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].ggd[:].v_biasing[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>V</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Wall geometry described using the Generic Grid Description, for various time slices (in case of mobile wall elements). The timebase of this array of structure must be a subset of the timebase on which physical quantities are described (../ggd structure). Grid_subsets are used to describe various  wall components in a modular way.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].base</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].base[:].jacobian</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].grid_subset[:].element]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Metric Jacobian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].base[:].tensor_contravariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].base[:].tensor_covariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].dimension</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Space dimension of the grid subset elements, using the convention 1=nodes, 2=edges, 3=faces, 4=cells/volumes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].grid_ggd[:].grid_subset[:].element</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].element[:].object</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].element[:].object[:].dimension</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Dimension of the object - using the convention  1=nodes, 2=edges, 3=faces, 4=cells/volumes</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].element[:].object[:].index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Object index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].element[:].object[:].space</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the space from which that object is taken</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid subset identifier<br>0) unspecified : unspecified<br>1) nodes : All nodes (0D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure). In case of a structured grid represented with multiple 1D spaces, the order of the implicit elements in the grid_subset follows Fortran ordering, i.e. iterate always on nodes of the first space first, then move to the second node of the second space, ... : [((s1_1 to s1_end), s2_1, s3_1 ... sN_1), (((s1_1 to s1_end), s2_2, s3_1, ... sN_1)), ... ((s1_1 to s1_end), s2_end, s3_end ... sN_end)]<br>2) edges : All edges (1D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>3) x_aligned_edges : All x-aligned (poloidally) aligned edges belonging to the associated spaces<br>4) y_aligned_edges : All y-aligned (radially) aligned edges belonging to the associated spaces<br>5) cells : All cells (2D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>6) x_points : Nodes defining x-points<br>7) core_cut : y-aligned edges inside the separatrix connecting to the active x-point<br>8) PFR_cut : y-aligned edges in the private flux region connecting to the active x-point<br>9) outer_throat : y-aligned edges in the outer SOL connecting to the active x-point<br>10) inner_throat : y-aligned edges in the inner SOL connecting to the active x-point<br>11) outer_midplane : y-aligned edges connecting to the node closest to outer midplane on the separatrix<br>12) inner_midplane : y-aligned edges connecting to the node closest to inner midplane on the separatrix<br>13) outer_target : y-aligned edges defining the outer target<br>14) inner_target : y-aligned edges defining the inner target<br>15) core_boundary : Innermost x-aligned edges<br>16) separatrix : x-aligned edges defining the active separatrix<br>17) main_chamber_wall : x-aligned edges defining main chamber wall outside of the divertor regions<br>18) outer_baffle : x-aligned edges defining the chamber wall of the outer active divertor region<br>19) inner_baffle : x-aligned edges defining the chamber wall of the inner active divertor region<br>20) outer_PFR_wall : x-aligned edges defining the private flux region wall of the outer active divertor region<br>21) inner_PFR_wall : x-aligned edges defining the private flux region wall of the inner active divertor region<br>22) core : Cells inside the active separatrix<br>23) sol : Cells defining the main SOL outside of the divertor regions<br>24) outer_divertor : Cells defining the outer divertor region<br>25) inner_divertor : Cells defining the inner divertor region<br>26) core_sol : x-aligned edges defining part of active separatrix separating core and sol<br>27) full_main_chamber_wall : main_chamber_wall + outer_baffle(s) + inner_baffle(s)<br>28) full_PFR_wall : outer_PFR__wall(s) + inner_PFR_wall(s)<br>29) core_cut_X2 : y-aligned edges inside the separatrix connecting to the non-active x-point<br>30) PFR_cut_X2 : y-aligned edges in the private flux region connecting to the non-active x-point<br>31) outer_throat_X2 : y-aligned edges in the outer SOL connecting to the non-active x-point<br>32) inner_throat_X2 : y-aligned edges in the inner SOL connecting to the non-active x-point<br>33) separatrix_2 : x-aligned edges defining the non-active separatrix<br>34) outer_baffle_2 : x-aligned edges defining the chamber wall of the outer non-active divertor region<br>35) inner_baffle_2 : x-aligned edges defining the chamber wall of the inner non-active divertor region<br>36) outer_PFR_wall_2 : x-aligned edges defining the private flux region wall of the outer non-active divertor region<br>37) inner_PFR_wall_2 : x-aligned edges defining the private flux region wall of the inner non-active divertor region<br>38) intra_sep : Cells between the two separatrices<br>39) outer_divertor_2 : Cells defining the outer inactive divertor region<br>40) inner_divertor_2 : Cells defining the inner inactive divertor region<br>41) outer_target_2 : y-aligned edges defining the outer inactive target<br>42) inner_target_2 : y-aligned edges defining the inner inactive target<br>43) volumes : All volumes (3D) belonging to the associated spaces, implicit declaration (no need to replicate the grid elements in the grid_subset structure)<br>44) full_wall : All edges defining walls, baffles, and targets<br>45) outer_sf_leg_entrance_1 : y-aligned edges defining the SOL entrance of the first snowflake outer leg<br>46) outer_sf_leg_entrance_2 : y-aligned edges defining the SOL entrance of the third snowflake outer leg<br>47) outer_sf_pfr_connection_1 : y-aligned edges defining the connection between the outer snowflake entrance and third leg<br>48) outer_sf_pfr_connection_2 : y-aligned edges defining the connection between the outer snowflake first and second leg<br>100) magnetic_axis : Point corresponding to the magnetic axis<br>101) outer_mid_plane_separatrix : Point on active separatrix at outer mid-plane<br>102) inner_mid_plane_separatrix : Point on active separatrix at inner mid-plane<br>103) outer_target_separatrix : Point on active separatrix at outer active target<br>104) inner_target_separatrix : Point on active separatrix at inner active target<br>105) outer_target_separatrix_2 : Point on non-active separatrix at outer non-active target<br>106) inner_target_separatrix_2 : Point on non-active separatrix at inner non-active target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].metric</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].metric.jacobian</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].grid_subset[:].element]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Metric Jacobian</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].metric.tensor_contravariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].grid_subset[:].metric.tensor_covariant</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].grid_ggd[:].grid_subset[:].element,<br> 1...N,<br> 1...N]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>mixed</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Grid identifier<br>0) unspecified : unspecified<br>1) linear : Linear<br>2) cylinder : Cylindrical geometry (straight in axial direction)<br>3) limiter : Limiter<br>4) SN : Single null<br>5) CDN : Connected double null<br>6) DDN_bottom : Disconnected double null with inner X-point below the midplane<br>7) DDN_top : Disconnected double null with inner X-point above the midplane<br>8) annulus : Annular geometry (not necessarily with straight axis)<br>9) stellarator_island : Stellarator island geometry<br>10) structured_spaces : Structured grid represented with multiple spaces of dimension 1<br>11) LFS_snowflake_minus : Snowflake grid with secondary x point on the low field side, and the secondary separatrix on top of the primary<br>12) LFS_snowflake_plus : Snowflake grid with secondary x point to the right of the primary, and the secondary separatrix below the primary<br>100) reference : Refers to a GGD described in another IDS indicated by grid_path. In such a case, do not fill the grid_ggd node of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the grid, including the IDS name, in case of implicit reference to a grid_ggd node described in another IDS. To be filled only if the grid is not described explicitly in this grid_ggd structure. Example syntax: IDS::wall/0/description_ggd(1)/grid_ggd, means that the grid is located in the wall IDS, occurrence 0, with relative path description_ggd(1)/grid_ggd, using Fortran index convention (here : first index of the array)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].coordinates_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therefore defines the dimension of the space. The meaning of these predefined integer constants can be found in the Data Dictionary under utilities/coordinate_identifier.xml</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].geometry_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier, >1: Fourier with periodicity)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].geometry_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].geometry_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].geometry_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].identifier</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Space identifier<br>0) unspecified : unspecified<br>1) primary_standard : Primary space defining the standard grid<br>2) primary_staggered : Primary space defining a grid staggered with respect to the primary standard space<br>3) secondary_structured : Secondary space defining additional dimensions that extend the primary standard space in a structured way</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].identifier.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].identifier.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].identifier.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].geometry_content</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Content of the ../object/geometry node for this dimension<br>0) unspecified : unspecified<br>1) node_coordinates : For nodes : node coordinates<br>11) node_coordinates_connection : For nodes : node coordinates, then connection length, and distance in the poloidal plane to the nearest solid surface outside the separatrix<br>21) edge_areas : For edges : contains 3 surface areas after uniform extension in the third dimension of the edges. Geometry(1) and geometry(2) are the projections of that area along the local poloidal and radial coordinate respectively. Geometry(3) is the full surface area of the extended edge<br>31) face_indices_volume : For faces : coordinates indices (ix, iy) of the face within the structured grid of the code. The third element contains the volume after uniform extension in the third dimension of the faces<br>32) face_indices_volume_connection : For faces : coordinates indices (ix, iy) of the face within the structured grid of the code. The third element contains the volume after uniform extension in the third dimension of the faces. The fourth element is the connection length. The fifth element is the distance in the poloidal plane to the nearest solid surface outside the separatrix</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].geometry_content.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].geometry_content.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].geometry_content.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].boundary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of  (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].boundary[:].index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of this (n-1)-dimensional boundary object</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].geometry</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>mixed</p></td><td><p>Geometry data associated with the object, its detailed content is defined by ../../geometry_content. Its dimension depends on the type of object, geometry and coordinate considered. </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].geometry_2d</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>mixed</p></td><td><p>2D geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. Typically, the first dimension represents the object coordinates, while the second dimension would represent the values of the various degrees of freedom of the finite element attached to the object.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].measure</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^dimension</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].grid_ggd[:].space[:].objects_per_dimension[:].object[:].nodes</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].grid_ggd[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].material[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Material of each grid_ggd object, given for each slice of the grid_ggd time base (the material is not supposed to change, but grid_ggd may evolve with time)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material[:].grid_subset</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Material is described for various wall components (grid subsets), using the identifier convention below<br>0) unspecified : unspecified<br>1) C : Carbon<br>2) W : Tungsten<br>3) C_W_coating : Carbon with tungsten coating<br>4) SS : Stainless steel<br>5) SS_C_coating : Stainless steel with carbon coating<br>6) IN : Inconel<br>7) IN_C_coating : Inconel with carbon coating<br>8) BC : Boron carbide<br>17) BN : Boron nitride<br>9) Ti_C_coating : Titanium with carbon coating<br>10) Be : Beryllium<br>11) Mo : Molybdenum<br>12) Quartz : Quartz<br>13) Ge : Germanium<br>14) Si : Silicon<br>15) LiF : Lithium fluoride<br>16) InSb : Indium antimonide<br>18) Cu : Copper<br>19) CuCrZr : Copper Chromium Zirconium alloy<br>20) U_235 : Uranium 235 isotope<br>21) U_238 : Uranium 238 isotope<br>22) Diamond : Diamond<br>23) CxHy : Organic molecule<br>24) LaCl3 : Lanthanum chloride<br>25) LaBr : Lanthanum bromide<br>26) HPGe : High Purity Germanium<br>27) CeBr : Cesium bromide<br>28) CZT : Cadmium zinc telluride<br>29) In_115 : Indium 115 isotope<br>30) He_4 : Helium 4 isotope</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material[:].grid_subset[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material[:].grid_subset[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material[:].grid_subset[:].identifiers</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Identifier values, one value is provided per element in the grid subset. If the size of the child arrays is 1, their value applies to all elements of the subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material[:].grid_subset[:].identifiers.descriptions</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].material[:].grid_subset[:].identifiers.names]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].material[:].grid_subset[:].identifiers.indices</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].material[:].grid_subset[:].identifiers.names]</p></td><td><p>INT_1D</p></td><td><p></p></td><td><p>Integer identifiers (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].material[:].grid_subset[:].identifiers.names</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>Short string identifiers</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].material[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].thickness</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].thickness[:].time]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>In the case of a thin wall description, effective thickness of each surface element of grid_ggd, given for each slice of the grid_ggd time base (the thickness is not supposed to change, but grid_ggd may evolve with time)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].thickness[:].grid_subset</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p>m</p></td><td><p>The thickness is given for various wall components (grid subsets)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].thickness[:].grid_subset[:].coefficients</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.description_ggd[:].thickness[:].grid_subset[:].values,<br> 1...N]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>m</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension).</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].thickness[:].grid_subset[:].grid_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid used to represent this quantity</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].thickness[:].grid_subset[:].grid_subset_index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Index of the grid subset the data is provided on. Corresponds to the index used in the grid subset definition: grid_subset(:)/identifier/index</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].thickness[:].grid_subset[:].values</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>m</p></td><td><p>One scalar value is provided per element in the grid subset.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.description_ggd[:].thickness[:].time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of wall: index = 0 for gas tight, 1 for a wall with holes/open ports, 2 for a thin wall description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.description_ggd[:].type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.first_wall_enclosed_volume</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^3</p></td><td><p>Volume available to gas or plasma enclosed by the first wall contour</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.first_wall_power_flux_peak</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p>W.m^-2</p></td><td><p>Peak power flux on the first wall</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.first_wall_power_flux_peak.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.first_wall_power_flux_peak.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W.m^-2</p></td><td><p>Data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.first_wall_power_flux_peak.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Time</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.first_wall_surface_area</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>m^2</p></td><td><p>First wall surface area</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Simple 0D description of plasma-wall interaction</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.current_tor</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>A</p></td><td><p>Toroidal current flowing in the vacuum vessel</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Quantities related to electrons</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons.gas_puff</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Gas puff rate (in equivalent electrons)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons.particle_flux_from_plasma</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Particle flux from the plasma (in equivalent electrons)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons.particle_flux_from_wall</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...3,<br> wall.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Particle flux from the wall corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast), in equivalent electrons</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons.power_inner_target</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Electron power on the inner target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons.power_outer_target</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Electron power on the inner target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.electrons.pumping_speed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Pumped particle flux (in equivalent electrons)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Quantities related to the various neutral species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].gas_puff</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Gas puff rate for that species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Sputtering coefficients due to a set of incident species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].element</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>List of elements forming the atom or molecule of the incident species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].element[:].a</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Atomic Mass Unit</p></td><td><p>Mass of atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].element[:].atoms_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Number of atoms of this element in the molecule</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].element[:].multiplicity</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Multiplicity of the atom</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].element[:].z_n</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>Elementary Charge Unit</p></td><td><p>Nuclear charge</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.global_quantities.neutral[:].incident_species[:].energies</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>eV</p></td><td><p>Array of energies of this incident species, on which the sputtering_physical_coefficient is tabulated</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying the incident species (e.g. H, D, CD4, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].sputtering_chemical_coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...3,<br> wall.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Effective coefficient of chemical sputtering for various neutral types (first dimension: 1: cold; 2: thermal; 3: fast), due to this incident species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].incident_species[:].sputtering_physical_coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...3,<br> wall.global_quantities.neutral[:].incident_species[:].energies,<br> wall.time]</p></td><td><p>FLT_3D (uncertain)</p></td><td><p>-</p></td><td><p>Effective coefficient of physical sputtering for various neutral types (first dimension: 1: cold; 2: thermal; 3: fast), due to this incident species and for various energies (second dimension)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].label</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>String identifying the species (e.g. H, D, CD4, ...)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].particle_flux_from_plasma</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Particle flux from the plasma for that species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].particle_flux_from_wall</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...3,<br> wall.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Particle flux from the wall corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].pumping_speed</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>s^-1</p></td><td><p>Pumped particle flux for that species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].recycling_energy_coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...3,<br> wall.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Energy recycling coefficient corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].recycling_particles_coefficient</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...3,<br> wall.time]</p></td><td><p>FLT_2D (uncertain)</p></td><td><p>-</p></td><td><p>Particle recycling coefficient corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.neutral[:].wall_inventory</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>-</p></td><td><p>Wall inventory, i.e. cumulated exchange of neutral species between plasma and wall from t = 0, positive if a species has gone to the wall, for that species</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_black_body</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Black body radiated power emitted from the wall (emissivity is included)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_conducted</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Power conducted by the plasma onto the wall</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_convected</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Power convected by the plasma onto the wall</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_currents</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Power deposited on the wall due to electric currents (positive means power is deposited on the target)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_density_inner_target_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Maximum power density on the inner target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_density_outer_target_max</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Maximum power density on the outer target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_incident</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Total power incident on the wall. This power is split in the various physical categories listed below</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_inner_target_ion_total</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Total ion (summed over ion species) power on the inner target</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_neutrals</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Net power from neutrals on the wall  (positive means power is deposited on the wall)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_radiated</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Net radiated power from plasma onto the wall (incident-reflected)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_recombination_neutrals</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Power deposited on the wall due to recombination of neutrals into a ground state (e.g. molecules)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_recombination_plasma</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Power deposited on the wall due to recombination of plasma ions</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.power_to_cooling</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>W</p></td><td><p>Power to cooling systems</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.global_quantities.temperature</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[wall.time]</p></td><td><p>FLT_1D (uncertain)</p></td><td><p>K</p></td><td><p>Wall temperature</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.comment</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Any comment describing the content of this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.creation_date</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Date at which this data has been produced</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.homogeneous_time</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>This node must be filled (with 0, 1, or 2) for the IDS to be valid. If 1, the time of this IDS is homogeneous, i.e. the time values for this IDS are stored in the time node just below the root of this IDS. If 0, the time values are stored in the various time fields at lower levels in the tree. In the case only constant or static nodes are filled within the IDS, homogeneous_time must be set to 2</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>User-defined name for this IDS occurrence</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.occurrence</p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p></p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.occurrence_type</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Type of data contained in this occurrence<br>1) reconstruction : Equilibrium reconstruction<br>2) prediction_fixed : Equilibrium prediction, fixed boundary<br>3) prediction_free : Equilibrium prediction, free boundary<br>4) mapping : Used for mapping equilibrium results from one grid type / resolution to another, or for including variables not present in the first set such as the calculation of magnetic field of other derived parameters</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.occurrence_type.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Verbose description</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.occurrence_type.index</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>INT_0D</p></td><td><p></p></td><td><p>Integer identifier (enumeration index within a list). Private identifier values must be indicated by a negative index.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.occurrence_type.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short string identifier</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Information about the plugins used to write/read this IDS. This structure is filled automatically by the Access Layer at GET/PUT time, no need to fill it via a user program.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_get</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to GET the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_get.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_get.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_get.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_get.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_get.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Plugin infrastructure used to PUT the data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_put.commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_put.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_put.name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_put.repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.infrastructure_put.version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which a plugin has been applied</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins actually used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application). This information is filled by the plugin infrastructure during the GET operation.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].get_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the plugin applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins used to PUT a node (potentially, multiple plugins can be applied, if so they are listed by order of application)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].put_operation[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Plugins to be used to read back a node (potentially, multiple plugins can be applied, listed in reverse order of application) </p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback[:].commit</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique commit reference of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback[:].description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Short description of the software (type, purpose)</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback[:].name</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of software used</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback[:].parameters</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>List of the code specific parameters in XML format</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback[:].repository</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>URL of software repository</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.plugins.node[:].readback[:].version</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Unique version (tag) of software</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.provenance</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Provenance information about this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.provenance.node</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STRUCT_ARRAY</p></td><td><p></p></td><td><p>Set of IDS nodes for which the provenance is given. The provenance information applies to the whole structure below the IDS node. For documenting provenance information for the whole IDS, set the size of this array of structure to 1 and leave the child "path" node empty</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.provenance.node[:].path</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Path of the node within the IDS, following the syntax given in the link below. If empty, means the provenance information applies to the whole IDS.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.provenance.node[:].sources</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>STR_1D</p></td><td><p></p></td><td><p>List of sources used to import or calculate this node, identified as explained below. In case the node is the result of of a calculation / data processing, the source is an input to the process described in the "code" structure at the root of the IDS. The source can be an IDS (identified by a URI or a persitent identifier, see syntax in the link below) or non-IDS data imported directly from an non-IMAS database (identified by the command used to import the source, or the persistent identifier of the data source). Often data are obtained by a chain of processes, however only the last process input are recorded here. The full chain of provenance has then to be reconstructed recursively from the provenance information contained in the data sources.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.provider</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Name of the person in charge of producing this data</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.source</p><p><font color="red">(obsolescent)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Source of the data (any comment describing the origin of the data : code, path to diagnostic signals, processing method, ...). Superseeded by the new provenance structure.</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.version_put</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Version of the access layer package used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.version_put.access_layer</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Access Layer used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.version_put.access_layer_language</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Programming language of the Access Layer high level API used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.ids_properties.version_put.data_dictionary</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Version of Data Dictionary used to PUT this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.temperature_reference</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STRUCTURE</p></td><td><p></p></td><td><p>Reference temperature for which the machine description data is given in this IDS</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.temperature_reference.data</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>FLT_0D (uncertain)</p></td><td><p>K</p></td><td><p>Reference temperature</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p>wall.temperature_reference.description</p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p></p></td><td><p>STR_0D</p></td><td><p></p></td><td><p>Description of how the reference temperature is defined : for which object, at which location, ...</p></td></tr>
   <tr><td style="word-wrap:break-word;word-break:break-all"><p><strong>wall.time</strong></p><p><font color="blue">(alpha)</font></p></td><td style="word-wrap:break-word;word-break:break-all"><p>[1...N]</p></td><td><p>FLT_1D_TYPE</p></td><td><p>s</p></td><td><p>Generic time</p></td></tr>
   </table>
   </table><p></p>
